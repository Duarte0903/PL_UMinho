
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AT BEGIN CHAR COLON COMMENT CONCAT CR DIVIDE DO DOT DROP DUP ELSE EMIT EXCLAMATION EXIT IF INF INFEQ LEFT_PAREN LOOP MINUS MOD NEWLINE NOT NUMBER OVER PLUS REPEAT RIGHT_PAREN ROT SEMICOLON STDOUT STRING SUP SUPEQ SWAP THEN TIMES VARIABLE WHILE reserved_wordprogram : statementsstatements : statement\n                  | statements statementstatement : expression\n                 | flow_controlexpression : NUMBER\n                  | STRING\n                  | VARIABLE\n                  | CHAR\n                  | EMIT\n                  | special_expression\n                  | reserved_wordexpression : DOTexpression : STDOUTdup_statement : DUPexpression : COMMENTexpression : expression expression arithmetic_oparithmetic_op : PLUS\n                     | MINUS\n                     | TIMES\n                     | DIVIDE\n                     | MODexpression : expression expression relational_oprelational_op : NOT\n                     | INF\n                     | SUP\n                     | INFEQ\n                     | SUPEQexpression : expression expression string_opstring_op : CONCATspecial_expression : EXCLAMATION\n                           | AT\n                           | COLON\n                           | SEMICOLON\n                           | LEFT_PAREN\n                           | RIGHT_PARENflow_control : if_statement\n                    | else_statement\n                    | while_loop\n                    | repeat_loop\n                    | exit_statement\n                    | drop_statementif_statement : IF expression THEN statementselse_statement : ELSEwhile_loop : WHILE expression DO statements LOOPrepeat_loop : BEGIN statements WHILE expression REPEATexit_statement : EXITdrop_statement : DROPswap_statement : SWAProt_statement : ROTover_statement : OVER'
    
_lr_action_items = {'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[6,6,-2,6,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,6,-44,6,6,-47,-48,-3,6,6,6,6,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,6,6,6,6,6,6,-45,-46,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[7,7,-2,7,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,7,-44,7,7,-47,-48,-3,7,7,7,7,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,7,7,7,7,7,7,-45,-46,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[8,8,-2,8,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,8,-44,8,8,-47,-48,-3,8,8,8,8,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,8,8,8,8,8,8,-45,-46,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[9,9,-2,9,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,9,-44,9,9,-47,-48,-3,9,9,9,9,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,9,9,9,9,9,9,-45,-46,]),'EMIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[10,10,-2,10,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,10,-44,10,10,-47,-48,-3,10,10,10,10,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,10,10,10,10,10,10,-45,-46,]),'reserved_word':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[12,12,-2,12,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,12,-44,12,12,-47,-48,-3,12,12,12,12,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,12,12,12,12,12,12,-45,-46,]),'DOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[13,13,-2,13,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,13,-44,13,13,-47,-48,-3,13,13,13,13,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,13,13,13,13,13,13,-45,-46,]),'STDOUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[14,14,-2,14,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,14,-44,14,14,-47,-48,-3,14,14,14,14,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,14,14,14,14,14,14,-45,-46,]),'COMMENT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[15,15,-2,15,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,15,-44,15,15,-47,-48,-3,15,15,15,15,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,15,15,15,15,15,15,-45,-46,]),'EXCLAMATION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[22,22,-2,22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,22,-44,22,22,-47,-48,-3,22,22,22,22,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,22,22,22,22,22,22,-45,-46,]),'AT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[23,23,-2,23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,23,-44,23,23,-47,-48,-3,23,23,23,23,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,23,23,23,23,23,23,-45,-46,]),'COLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[24,24,-2,24,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,24,-44,24,24,-47,-48,-3,24,24,24,24,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,24,24,24,24,24,24,-45,-46,]),'SEMICOLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[25,25,-2,25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,25,-44,25,25,-47,-48,-3,25,25,25,25,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,25,25,25,25,25,25,-45,-46,]),'LEFT_PAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[26,26,-2,26,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,26,-44,26,26,-47,-48,-3,26,26,26,26,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,26,26,26,26,26,26,-45,-46,]),'RIGHT_PAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[27,27,-2,27,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,27,-44,27,27,-47,-48,-3,27,27,27,27,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,27,27,27,27,27,27,-45,-46,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,],[28,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,28,-47,-48,-3,28,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,28,28,28,28,-45,-46,]),'ELSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,],[29,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,29,-47,-48,-3,29,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,29,29,29,29,-45,-46,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,],[30,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,30,-47,-48,-3,55,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,30,30,30,30,-45,-46,]),'BEGIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,],[31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,31,-47,-48,-3,31,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,31,31,31,31,-45,-46,]),'EXIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,],[32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,32,-47,-48,-3,32,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,32,32,32,32,-45,-46,]),'DROP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,],[33,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,33,-47,-48,-3,33,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,33,33,33,33,-45,-46,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,56,59,60,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,-47,-48,-3,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,-43,-45,-46,]),'LOOP':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,33,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,59,60,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-37,-38,-39,-40,-41,-42,-31,-32,-33,-34,-35,-36,-44,-47,-48,-3,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,-43,59,-45,-46,]),'PLUS':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,42,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'MINUS':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,43,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'TIMES':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,44,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'DIVIDE':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,45,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'MOD':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,46,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'NOT':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,47,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'INF':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,48,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'SUP':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,49,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'INFEQ':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,50,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'SUPEQ':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,51,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'CONCAT':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,52,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'THEN':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,53,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,]),'DO':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,54,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,54,]),'REPEAT':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,],[-6,-7,-8,-9,-10,-11,-12,-13,-14,-16,-31,-32,-33,-34,-35,-36,-17,-23,-29,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-30,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,31,53,54,],[2,38,56,57,]),'statement':([0,2,31,38,53,54,56,57,],[3,34,3,34,3,3,34,34,]),'expression':([0,2,4,28,30,31,35,36,37,38,53,54,55,56,57,58,],[4,4,35,36,37,4,35,35,35,4,4,4,58,4,4,35,]),'flow_control':([0,2,31,38,53,54,56,57,],[5,5,5,5,5,5,5,5,]),'special_expression':([0,2,4,28,30,31,35,36,37,38,53,54,55,56,57,58,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'if_statement':([0,2,31,38,53,54,56,57,],[16,16,16,16,16,16,16,16,]),'else_statement':([0,2,31,38,53,54,56,57,],[17,17,17,17,17,17,17,17,]),'while_loop':([0,2,31,38,53,54,56,57,],[18,18,18,18,18,18,18,18,]),'repeat_loop':([0,2,31,38,53,54,56,57,],[19,19,19,19,19,19,19,19,]),'exit_statement':([0,2,31,38,53,54,56,57,],[20,20,20,20,20,20,20,20,]),'drop_statement':([0,2,31,38,53,54,56,57,],[21,21,21,21,21,21,21,21,]),'arithmetic_op':([35,],[39,]),'relational_op':([35,],[40,]),'string_op':([35,],[41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','forthYacc.py',11),
  ('statements -> statement','statements',1,'p_statements','forthYacc.py',16),
  ('statements -> statements statement','statements',2,'p_statements','forthYacc.py',17),
  ('statement -> expression','statement',1,'p_statement','forthYacc.py',27),
  ('statement -> flow_control','statement',1,'p_statement','forthYacc.py',28),
  ('expression -> NUMBER','expression',1,'p_expression','forthYacc.py',34),
  ('expression -> STRING','expression',1,'p_expression','forthYacc.py',35),
  ('expression -> VARIABLE','expression',1,'p_expression','forthYacc.py',36),
  ('expression -> CHAR','expression',1,'p_expression','forthYacc.py',37),
  ('expression -> EMIT','expression',1,'p_expression','forthYacc.py',38),
  ('expression -> special_expression','expression',1,'p_expression','forthYacc.py',39),
  ('expression -> reserved_word','expression',1,'p_expression','forthYacc.py',40),
  ('expression -> DOT','expression',1,'p_dot','forthYacc.py',91),
  ('expression -> STDOUT','expression',1,'p_STDOUT','forthYacc.py',106),
  ('dup_statement -> DUP','dup_statement',1,'p_dup_statement','forthYacc.py',113),
  ('expression -> COMMENT','expression',1,'p_comment','forthYacc.py',129),
  ('expression -> expression expression arithmetic_op','expression',3,'p_expression_arithmetic','forthYacc.py',140),
  ('arithmetic_op -> PLUS','arithmetic_op',1,'p_arithmetic_op','forthYacc.py',179),
  ('arithmetic_op -> MINUS','arithmetic_op',1,'p_arithmetic_op','forthYacc.py',180),
  ('arithmetic_op -> TIMES','arithmetic_op',1,'p_arithmetic_op','forthYacc.py',181),
  ('arithmetic_op -> DIVIDE','arithmetic_op',1,'p_arithmetic_op','forthYacc.py',182),
  ('arithmetic_op -> MOD','arithmetic_op',1,'p_arithmetic_op','forthYacc.py',183),
  ('expression -> expression expression relational_op','expression',3,'p_expression_relational','forthYacc.py',188),
  ('relational_op -> NOT','relational_op',1,'p_relational_op','forthYacc.py',220),
  ('relational_op -> INF','relational_op',1,'p_relational_op','forthYacc.py',221),
  ('relational_op -> SUP','relational_op',1,'p_relational_op','forthYacc.py',222),
  ('relational_op -> INFEQ','relational_op',1,'p_relational_op','forthYacc.py',223),
  ('relational_op -> SUPEQ','relational_op',1,'p_relational_op','forthYacc.py',224),
  ('expression -> expression expression string_op','expression',3,'p_string_operations','forthYacc.py',229),
  ('string_op -> CONCAT','string_op',1,'p_string_op','forthYacc.py',248),
  ('special_expression -> EXCLAMATION','special_expression',1,'p_special_expression','forthYacc.py',255),
  ('special_expression -> AT','special_expression',1,'p_special_expression','forthYacc.py',256),
  ('special_expression -> COLON','special_expression',1,'p_special_expression','forthYacc.py',257),
  ('special_expression -> SEMICOLON','special_expression',1,'p_special_expression','forthYacc.py',258),
  ('special_expression -> LEFT_PAREN','special_expression',1,'p_special_expression','forthYacc.py',259),
  ('special_expression -> RIGHT_PAREN','special_expression',1,'p_special_expression','forthYacc.py',260),
  ('flow_control -> if_statement','flow_control',1,'p_flow_control','forthYacc.py',265),
  ('flow_control -> else_statement','flow_control',1,'p_flow_control','forthYacc.py',266),
  ('flow_control -> while_loop','flow_control',1,'p_flow_control','forthYacc.py',267),
  ('flow_control -> repeat_loop','flow_control',1,'p_flow_control','forthYacc.py',268),
  ('flow_control -> exit_statement','flow_control',1,'p_flow_control','forthYacc.py',269),
  ('flow_control -> drop_statement','flow_control',1,'p_flow_control','forthYacc.py',270),
  ('if_statement -> IF expression THEN statements','if_statement',4,'p_if_statement','forthYacc.py',276),
  ('else_statement -> ELSE','else_statement',1,'p_else_statement','forthYacc.py',280),
  ('while_loop -> WHILE expression DO statements LOOP','while_loop',5,'p_while_loop','forthYacc.py',284),
  ('repeat_loop -> BEGIN statements WHILE expression REPEAT','repeat_loop',5,'p_repeat_loop','forthYacc.py',288),
  ('exit_statement -> EXIT','exit_statement',1,'p_exit_statement','forthYacc.py',292),
  ('drop_statement -> DROP','drop_statement',1,'p_drop_statement','forthYacc.py',296),
  ('swap_statement -> SWAP','swap_statement',1,'p_swap_statement','forthYacc.py',306),
  ('rot_statement -> ROT','rot_statement',1,'p_rot_statement','forthYacc.py',319),
  ('over_statement -> OVER','over_statement',1,'p_over_statement','forthYacc.py',355),
]
