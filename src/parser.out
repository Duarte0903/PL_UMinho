Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AT
    BEGIN
    DO
    ELSE
    EXCLAMATION
    EXIT
    IF
    LEFT_PAREN
    LOOP
    NEWLINE
    REPEAT
    RIGHT_PAREN
    THEN
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> comandos
Rule 2     comandos -> comando
Rule 3     comandos -> comandos comando
Rule 4     comando -> exp_aritmeticas
Rule 5     comando -> exp_relacionais
Rule 6     comando -> functions
Rule 7     comando -> values
Rule 8     exp_aritmeticas -> comando comando PLUS
Rule 9     exp_aritmeticas -> comando comando MINUS
Rule 10    exp_aritmeticas -> comando comando TIMES
Rule 11    exp_aritmeticas -> comando comando DIVIDE
Rule 12    exp_aritmeticas -> comando comando MOD
Rule 13    exp_relacionais -> comando comando NOT
Rule 14    exp_relacionais -> comando comando INF
Rule 15    exp_relacionais -> comando comando SUP
Rule 16    exp_relacionais -> comando comando INFEQ
Rule 17    exp_relacionais -> comando comando SUPEQ
Rule 18    values -> NUMBER
Rule 19    values -> STRING
Rule 20    functions -> stdout
Rule 21    functions -> dot
Rule 22    functions -> space
Rule 23    functions -> dup
Rule 24    functions -> comment
Rule 25    functions -> drop
Rule 26    functions -> swap
Rule 27    functions -> rot
Rule 28    functions -> over
Rule 29    functions -> concat
Rule 30    functions -> cr
Rule 31    functions -> emit
Rule 32    functions -> char
Rule 33    functions -> key
Rule 34    functions -> spaces
Rule 35    functions -> 2dup
Rule 36    functions -> function
Rule 37    functions -> func_criadas
Rule 38    stdout -> STDOUT
Rule 39    dot -> DOT
Rule 40    space -> SPACE
Rule 41    dup -> DUP
Rule 42    comment -> COMMENT_LINE
Rule 43    comment -> COMMENT_BLOCK
Rule 44    drop -> DROP
Rule 45    swap -> SWAP
Rule 46    rot -> ROT
Rule 47    over -> OVER
Rule 48    concat -> CONCAT
Rule 49    cr -> CR
Rule 50    emit -> EMIT
Rule 51    char -> CHAR
Rule 52    key -> KEY
Rule 53    spaces -> SPACES
Rule 54    2dup -> 2DUP
Rule 55    function -> FUNCTION
Rule 56    function -> FUNCTION_CALL
Rule 57    func_criadas -> COLON FUNCTION comandos SEMICOLON function

Terminals, with rules where they appear

2DUP                 : 54
AT                   : 
BEGIN                : 
CHAR                 : 51
COLON                : 57
COMMENT_BLOCK        : 43
COMMENT_LINE         : 42
CONCAT               : 48
CR                   : 49
DIVIDE               : 11
DO                   : 
DOT                  : 39
DROP                 : 44
DUP                  : 41
ELSE                 : 
EMIT                 : 50
EXCLAMATION          : 
EXIT                 : 
FUNCTION             : 55 57
FUNCTION_CALL        : 56
IF                   : 
INF                  : 14
INFEQ                : 16
KEY                  : 52
LEFT_PAREN           : 
LOOP                 : 
MINUS                : 9
MOD                  : 12
NEWLINE              : 
NOT                  : 13
NUMBER               : 18
OVER                 : 47
PLUS                 : 8
REPEAT               : 
RIGHT_PAREN          : 
ROT                  : 46
SEMICOLON            : 57
SPACE                : 40
SPACES               : 53
STDOUT               : 38
STRING               : 19
SUP                  : 15
SUPEQ                : 17
SWAP                 : 45
THEN                 : 
TIMES                : 10
WHILE                : 
error                : 

Nonterminals, with rules where they appear

2dup                 : 35
char                 : 32
comando              : 2 3 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17
comandos             : 1 3 57
comment              : 24
concat               : 29
cr                   : 30
dot                  : 21
drop                 : 25
dup                  : 23
emit                 : 31
exp_aritmeticas      : 4
exp_relacionais      : 5
func_criadas         : 37
function             : 36 57
functions            : 6
key                  : 33
over                 : 28
programa             : 0
rot                  : 27
space                : 22
spaces               : 34
stdout               : 20
swap                 : 26
values               : 7

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . comandos
    (2) comandos -> . comando
    (3) comandos -> . comandos comando
    (4) comando -> . exp_aritmeticas
    (5) comando -> . exp_relacionais
    (6) comando -> . functions
    (7) comando -> . values
    (8) exp_aritmeticas -> . comando comando PLUS
    (9) exp_aritmeticas -> . comando comando MINUS
    (10) exp_aritmeticas -> . comando comando TIMES
    (11) exp_aritmeticas -> . comando comando DIVIDE
    (12) exp_aritmeticas -> . comando comando MOD
    (13) exp_relacionais -> . comando comando NOT
    (14) exp_relacionais -> . comando comando INF
    (15) exp_relacionais -> . comando comando SUP
    (16) exp_relacionais -> . comando comando INFEQ
    (17) exp_relacionais -> . comando comando SUPEQ
    (20) functions -> . stdout
    (21) functions -> . dot
    (22) functions -> . space
    (23) functions -> . dup
    (24) functions -> . comment
    (25) functions -> . drop
    (26) functions -> . swap
    (27) functions -> . rot
    (28) functions -> . over
    (29) functions -> . concat
    (30) functions -> . cr
    (31) functions -> . emit
    (32) functions -> . char
    (33) functions -> . key
    (34) functions -> . spaces
    (35) functions -> . 2dup
    (36) functions -> . function
    (37) functions -> . func_criadas
    (18) values -> . NUMBER
    (19) values -> . STRING
    (38) stdout -> . STDOUT
    (39) dot -> . DOT
    (40) space -> . SPACE
    (41) dup -> . DUP
    (42) comment -> . COMMENT_LINE
    (43) comment -> . COMMENT_BLOCK
    (44) drop -> . DROP
    (45) swap -> . SWAP
    (46) rot -> . ROT
    (47) over -> . OVER
    (48) concat -> . CONCAT
    (49) cr -> . CR
    (50) emit -> . EMIT
    (51) char -> . CHAR
    (52) key -> . KEY
    (53) spaces -> . SPACES
    (54) 2dup -> . 2DUP
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL
    (57) func_criadas -> . COLON FUNCTION comandos SEMICOLON function

    NUMBER          shift and go to state 26
    STRING          shift and go to state 27
    STDOUT          shift and go to state 28
    DOT             shift and go to state 29
    SPACE           shift and go to state 30
    DUP             shift and go to state 31
    COMMENT_LINE    shift and go to state 32
    COMMENT_BLOCK   shift and go to state 33
    DROP            shift and go to state 34
    SWAP            shift and go to state 35
    ROT             shift and go to state 36
    OVER            shift and go to state 37
    CONCAT          shift and go to state 38
    CR              shift and go to state 39
    EMIT            shift and go to state 40
    CHAR            shift and go to state 41
    KEY             shift and go to state 42
    SPACES          shift and go to state 43
    2DUP            shift and go to state 44
    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46
    COLON           shift and go to state 47

    programa                       shift and go to state 1
    comandos                       shift and go to state 2
    comando                        shift and go to state 3
    exp_aritmeticas                shift and go to state 4
    exp_relacionais                shift and go to state 5
    functions                      shift and go to state 6
    values                         shift and go to state 7
    stdout                         shift and go to state 8
    dot                            shift and go to state 9
    space                          shift and go to state 10
    dup                            shift and go to state 11
    comment                        shift and go to state 12
    drop                           shift and go to state 13
    swap                           shift and go to state 14
    rot                            shift and go to state 15
    over                           shift and go to state 16
    concat                         shift and go to state 17
    cr                             shift and go to state 18
    emit                           shift and go to state 19
    char                           shift and go to state 20
    key                            shift and go to state 21
    spaces                         shift and go to state 22
    2dup                           shift and go to state 23
    function                       shift and go to state 24
    func_criadas                   shift and go to state 25

state 1

    (0) S' -> programa .



state 2

    (1) programa -> comandos .
    (3) comandos -> comandos . comando
    (4) comando -> . exp_aritmeticas
    (5) comando -> . exp_relacionais
    (6) comando -> . functions
    (7) comando -> . values
    (8) exp_aritmeticas -> . comando comando PLUS
    (9) exp_aritmeticas -> . comando comando MINUS
    (10) exp_aritmeticas -> . comando comando TIMES
    (11) exp_aritmeticas -> . comando comando DIVIDE
    (12) exp_aritmeticas -> . comando comando MOD
    (13) exp_relacionais -> . comando comando NOT
    (14) exp_relacionais -> . comando comando INF
    (15) exp_relacionais -> . comando comando SUP
    (16) exp_relacionais -> . comando comando INFEQ
    (17) exp_relacionais -> . comando comando SUPEQ
    (20) functions -> . stdout
    (21) functions -> . dot
    (22) functions -> . space
    (23) functions -> . dup
    (24) functions -> . comment
    (25) functions -> . drop
    (26) functions -> . swap
    (27) functions -> . rot
    (28) functions -> . over
    (29) functions -> . concat
    (30) functions -> . cr
    (31) functions -> . emit
    (32) functions -> . char
    (33) functions -> . key
    (34) functions -> . spaces
    (35) functions -> . 2dup
    (36) functions -> . function
    (37) functions -> . func_criadas
    (18) values -> . NUMBER
    (19) values -> . STRING
    (38) stdout -> . STDOUT
    (39) dot -> . DOT
    (40) space -> . SPACE
    (41) dup -> . DUP
    (42) comment -> . COMMENT_LINE
    (43) comment -> . COMMENT_BLOCK
    (44) drop -> . DROP
    (45) swap -> . SWAP
    (46) rot -> . ROT
    (47) over -> . OVER
    (48) concat -> . CONCAT
    (49) cr -> . CR
    (50) emit -> . EMIT
    (51) char -> . CHAR
    (52) key -> . KEY
    (53) spaces -> . SPACES
    (54) 2dup -> . 2DUP
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL
    (57) func_criadas -> . COLON FUNCTION comandos SEMICOLON function

    $end            reduce using rule 1 (programa -> comandos .)
    NUMBER          shift and go to state 26
    STRING          shift and go to state 27
    STDOUT          shift and go to state 28
    DOT             shift and go to state 29
    SPACE           shift and go to state 30
    DUP             shift and go to state 31
    COMMENT_LINE    shift and go to state 32
    COMMENT_BLOCK   shift and go to state 33
    DROP            shift and go to state 34
    SWAP            shift and go to state 35
    ROT             shift and go to state 36
    OVER            shift and go to state 37
    CONCAT          shift and go to state 38
    CR              shift and go to state 39
    EMIT            shift and go to state 40
    CHAR            shift and go to state 41
    KEY             shift and go to state 42
    SPACES          shift and go to state 43
    2DUP            shift and go to state 44
    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46
    COLON           shift and go to state 47

    comando                        shift and go to state 48
    exp_aritmeticas                shift and go to state 4
    exp_relacionais                shift and go to state 5
    functions                      shift and go to state 6
    values                         shift and go to state 7
    stdout                         shift and go to state 8
    dot                            shift and go to state 9
    space                          shift and go to state 10
    dup                            shift and go to state 11
    comment                        shift and go to state 12
    drop                           shift and go to state 13
    swap                           shift and go to state 14
    rot                            shift and go to state 15
    over                           shift and go to state 16
    concat                         shift and go to state 17
    cr                             shift and go to state 18
    emit                           shift and go to state 19
    char                           shift and go to state 20
    key                            shift and go to state 21
    spaces                         shift and go to state 22
    2dup                           shift and go to state 23
    function                       shift and go to state 24
    func_criadas                   shift and go to state 25

state 3

    (2) comandos -> comando .
    (8) exp_aritmeticas -> comando . comando PLUS
    (9) exp_aritmeticas -> comando . comando MINUS
    (10) exp_aritmeticas -> comando . comando TIMES
    (11) exp_aritmeticas -> comando . comando DIVIDE
    (12) exp_aritmeticas -> comando . comando MOD
    (13) exp_relacionais -> comando . comando NOT
    (14) exp_relacionais -> comando . comando INF
    (15) exp_relacionais -> comando . comando SUP
    (16) exp_relacionais -> comando . comando INFEQ
    (17) exp_relacionais -> comando . comando SUPEQ
    (4) comando -> . exp_aritmeticas
    (5) comando -> . exp_relacionais
    (6) comando -> . functions
    (7) comando -> . values
    (8) exp_aritmeticas -> . comando comando PLUS
    (9) exp_aritmeticas -> . comando comando MINUS
    (10) exp_aritmeticas -> . comando comando TIMES
    (11) exp_aritmeticas -> . comando comando DIVIDE
    (12) exp_aritmeticas -> . comando comando MOD
    (13) exp_relacionais -> . comando comando NOT
    (14) exp_relacionais -> . comando comando INF
    (15) exp_relacionais -> . comando comando SUP
    (16) exp_relacionais -> . comando comando INFEQ
    (17) exp_relacionais -> . comando comando SUPEQ
    (20) functions -> . stdout
    (21) functions -> . dot
    (22) functions -> . space
    (23) functions -> . dup
    (24) functions -> . comment
    (25) functions -> . drop
    (26) functions -> . swap
    (27) functions -> . rot
    (28) functions -> . over
    (29) functions -> . concat
    (30) functions -> . cr
    (31) functions -> . emit
    (32) functions -> . char
    (33) functions -> . key
    (34) functions -> . spaces
    (35) functions -> . 2dup
    (36) functions -> . function
    (37) functions -> . func_criadas
    (18) values -> . NUMBER
    (19) values -> . STRING
    (38) stdout -> . STDOUT
    (39) dot -> . DOT
    (40) space -> . SPACE
    (41) dup -> . DUP
    (42) comment -> . COMMENT_LINE
    (43) comment -> . COMMENT_BLOCK
    (44) drop -> . DROP
    (45) swap -> . SWAP
    (46) rot -> . ROT
    (47) over -> . OVER
    (48) concat -> . CONCAT
    (49) cr -> . CR
    (50) emit -> . EMIT
    (51) char -> . CHAR
    (52) key -> . KEY
    (53) spaces -> . SPACES
    (54) 2dup -> . 2DUP
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL
    (57) func_criadas -> . COLON FUNCTION comandos SEMICOLON function

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STDOUT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SPACE resolved as shift
  ! shift/reduce conflict for DUP resolved as shift
  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for DROP resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for ROT resolved as shift
  ! shift/reduce conflict for OVER resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
  ! shift/reduce conflict for CR resolved as shift
  ! shift/reduce conflict for EMIT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for KEY resolved as shift
  ! shift/reduce conflict for SPACES resolved as shift
  ! shift/reduce conflict for 2DUP resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_CALL resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    $end            reduce using rule 2 (comandos -> comando .)
    SEMICOLON       reduce using rule 2 (comandos -> comando .)
    NUMBER          shift and go to state 26
    STRING          shift and go to state 27
    STDOUT          shift and go to state 28
    DOT             shift and go to state 29
    SPACE           shift and go to state 30
    DUP             shift and go to state 31
    COMMENT_LINE    shift and go to state 32
    COMMENT_BLOCK   shift and go to state 33
    DROP            shift and go to state 34
    SWAP            shift and go to state 35
    ROT             shift and go to state 36
    OVER            shift and go to state 37
    CONCAT          shift and go to state 38
    CR              shift and go to state 39
    EMIT            shift and go to state 40
    CHAR            shift and go to state 41
    KEY             shift and go to state 42
    SPACES          shift and go to state 43
    2DUP            shift and go to state 44
    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46
    COLON           shift and go to state 47

  ! NUMBER          [ reduce using rule 2 (comandos -> comando .) ]
  ! STRING          [ reduce using rule 2 (comandos -> comando .) ]
  ! STDOUT          [ reduce using rule 2 (comandos -> comando .) ]
  ! DOT             [ reduce using rule 2 (comandos -> comando .) ]
  ! SPACE           [ reduce using rule 2 (comandos -> comando .) ]
  ! DUP             [ reduce using rule 2 (comandos -> comando .) ]
  ! COMMENT_LINE    [ reduce using rule 2 (comandos -> comando .) ]
  ! COMMENT_BLOCK   [ reduce using rule 2 (comandos -> comando .) ]
  ! DROP            [ reduce using rule 2 (comandos -> comando .) ]
  ! SWAP            [ reduce using rule 2 (comandos -> comando .) ]
  ! ROT             [ reduce using rule 2 (comandos -> comando .) ]
  ! OVER            [ reduce using rule 2 (comandos -> comando .) ]
  ! CONCAT          [ reduce using rule 2 (comandos -> comando .) ]
  ! CR              [ reduce using rule 2 (comandos -> comando .) ]
  ! EMIT            [ reduce using rule 2 (comandos -> comando .) ]
  ! CHAR            [ reduce using rule 2 (comandos -> comando .) ]
  ! KEY             [ reduce using rule 2 (comandos -> comando .) ]
  ! SPACES          [ reduce using rule 2 (comandos -> comando .) ]
  ! 2DUP            [ reduce using rule 2 (comandos -> comando .) ]
  ! FUNCTION        [ reduce using rule 2 (comandos -> comando .) ]
  ! FUNCTION_CALL   [ reduce using rule 2 (comandos -> comando .) ]
  ! COLON           [ reduce using rule 2 (comandos -> comando .) ]

    comando                        shift and go to state 49
    exp_aritmeticas                shift and go to state 4
    exp_relacionais                shift and go to state 5
    functions                      shift and go to state 6
    values                         shift and go to state 7
    stdout                         shift and go to state 8
    dot                            shift and go to state 9
    space                          shift and go to state 10
    dup                            shift and go to state 11
    comment                        shift and go to state 12
    drop                           shift and go to state 13
    swap                           shift and go to state 14
    rot                            shift and go to state 15
    over                           shift and go to state 16
    concat                         shift and go to state 17
    cr                             shift and go to state 18
    emit                           shift and go to state 19
    char                           shift and go to state 20
    key                            shift and go to state 21
    spaces                         shift and go to state 22
    2dup                           shift and go to state 23
    function                       shift and go to state 24
    func_criadas                   shift and go to state 25

state 4

    (4) comando -> exp_aritmeticas .

    NUMBER          reduce using rule 4 (comando -> exp_aritmeticas .)
    STRING          reduce using rule 4 (comando -> exp_aritmeticas .)
    STDOUT          reduce using rule 4 (comando -> exp_aritmeticas .)
    DOT             reduce using rule 4 (comando -> exp_aritmeticas .)
    SPACE           reduce using rule 4 (comando -> exp_aritmeticas .)
    DUP             reduce using rule 4 (comando -> exp_aritmeticas .)
    COMMENT_LINE    reduce using rule 4 (comando -> exp_aritmeticas .)
    COMMENT_BLOCK   reduce using rule 4 (comando -> exp_aritmeticas .)
    DROP            reduce using rule 4 (comando -> exp_aritmeticas .)
    SWAP            reduce using rule 4 (comando -> exp_aritmeticas .)
    ROT             reduce using rule 4 (comando -> exp_aritmeticas .)
    OVER            reduce using rule 4 (comando -> exp_aritmeticas .)
    CONCAT          reduce using rule 4 (comando -> exp_aritmeticas .)
    CR              reduce using rule 4 (comando -> exp_aritmeticas .)
    EMIT            reduce using rule 4 (comando -> exp_aritmeticas .)
    CHAR            reduce using rule 4 (comando -> exp_aritmeticas .)
    KEY             reduce using rule 4 (comando -> exp_aritmeticas .)
    SPACES          reduce using rule 4 (comando -> exp_aritmeticas .)
    2DUP            reduce using rule 4 (comando -> exp_aritmeticas .)
    FUNCTION        reduce using rule 4 (comando -> exp_aritmeticas .)
    FUNCTION_CALL   reduce using rule 4 (comando -> exp_aritmeticas .)
    COLON           reduce using rule 4 (comando -> exp_aritmeticas .)
    $end            reduce using rule 4 (comando -> exp_aritmeticas .)
    PLUS            reduce using rule 4 (comando -> exp_aritmeticas .)
    MINUS           reduce using rule 4 (comando -> exp_aritmeticas .)
    TIMES           reduce using rule 4 (comando -> exp_aritmeticas .)
    DIVIDE          reduce using rule 4 (comando -> exp_aritmeticas .)
    MOD             reduce using rule 4 (comando -> exp_aritmeticas .)
    NOT             reduce using rule 4 (comando -> exp_aritmeticas .)
    INF             reduce using rule 4 (comando -> exp_aritmeticas .)
    SUP             reduce using rule 4 (comando -> exp_aritmeticas .)
    INFEQ           reduce using rule 4 (comando -> exp_aritmeticas .)
    SUPEQ           reduce using rule 4 (comando -> exp_aritmeticas .)
    SEMICOLON       reduce using rule 4 (comando -> exp_aritmeticas .)


state 5

    (5) comando -> exp_relacionais .

    NUMBER          reduce using rule 5 (comando -> exp_relacionais .)
    STRING          reduce using rule 5 (comando -> exp_relacionais .)
    STDOUT          reduce using rule 5 (comando -> exp_relacionais .)
    DOT             reduce using rule 5 (comando -> exp_relacionais .)
    SPACE           reduce using rule 5 (comando -> exp_relacionais .)
    DUP             reduce using rule 5 (comando -> exp_relacionais .)
    COMMENT_LINE    reduce using rule 5 (comando -> exp_relacionais .)
    COMMENT_BLOCK   reduce using rule 5 (comando -> exp_relacionais .)
    DROP            reduce using rule 5 (comando -> exp_relacionais .)
    SWAP            reduce using rule 5 (comando -> exp_relacionais .)
    ROT             reduce using rule 5 (comando -> exp_relacionais .)
    OVER            reduce using rule 5 (comando -> exp_relacionais .)
    CONCAT          reduce using rule 5 (comando -> exp_relacionais .)
    CR              reduce using rule 5 (comando -> exp_relacionais .)
    EMIT            reduce using rule 5 (comando -> exp_relacionais .)
    CHAR            reduce using rule 5 (comando -> exp_relacionais .)
    KEY             reduce using rule 5 (comando -> exp_relacionais .)
    SPACES          reduce using rule 5 (comando -> exp_relacionais .)
    2DUP            reduce using rule 5 (comando -> exp_relacionais .)
    FUNCTION        reduce using rule 5 (comando -> exp_relacionais .)
    FUNCTION_CALL   reduce using rule 5 (comando -> exp_relacionais .)
    COLON           reduce using rule 5 (comando -> exp_relacionais .)
    $end            reduce using rule 5 (comando -> exp_relacionais .)
    PLUS            reduce using rule 5 (comando -> exp_relacionais .)
    MINUS           reduce using rule 5 (comando -> exp_relacionais .)
    TIMES           reduce using rule 5 (comando -> exp_relacionais .)
    DIVIDE          reduce using rule 5 (comando -> exp_relacionais .)
    MOD             reduce using rule 5 (comando -> exp_relacionais .)
    NOT             reduce using rule 5 (comando -> exp_relacionais .)
    INF             reduce using rule 5 (comando -> exp_relacionais .)
    SUP             reduce using rule 5 (comando -> exp_relacionais .)
    INFEQ           reduce using rule 5 (comando -> exp_relacionais .)
    SUPEQ           reduce using rule 5 (comando -> exp_relacionais .)
    SEMICOLON       reduce using rule 5 (comando -> exp_relacionais .)


state 6

    (6) comando -> functions .

    NUMBER          reduce using rule 6 (comando -> functions .)
    STRING          reduce using rule 6 (comando -> functions .)
    STDOUT          reduce using rule 6 (comando -> functions .)
    DOT             reduce using rule 6 (comando -> functions .)
    SPACE           reduce using rule 6 (comando -> functions .)
    DUP             reduce using rule 6 (comando -> functions .)
    COMMENT_LINE    reduce using rule 6 (comando -> functions .)
    COMMENT_BLOCK   reduce using rule 6 (comando -> functions .)
    DROP            reduce using rule 6 (comando -> functions .)
    SWAP            reduce using rule 6 (comando -> functions .)
    ROT             reduce using rule 6 (comando -> functions .)
    OVER            reduce using rule 6 (comando -> functions .)
    CONCAT          reduce using rule 6 (comando -> functions .)
    CR              reduce using rule 6 (comando -> functions .)
    EMIT            reduce using rule 6 (comando -> functions .)
    CHAR            reduce using rule 6 (comando -> functions .)
    KEY             reduce using rule 6 (comando -> functions .)
    SPACES          reduce using rule 6 (comando -> functions .)
    2DUP            reduce using rule 6 (comando -> functions .)
    FUNCTION        reduce using rule 6 (comando -> functions .)
    FUNCTION_CALL   reduce using rule 6 (comando -> functions .)
    COLON           reduce using rule 6 (comando -> functions .)
    $end            reduce using rule 6 (comando -> functions .)
    PLUS            reduce using rule 6 (comando -> functions .)
    MINUS           reduce using rule 6 (comando -> functions .)
    TIMES           reduce using rule 6 (comando -> functions .)
    DIVIDE          reduce using rule 6 (comando -> functions .)
    MOD             reduce using rule 6 (comando -> functions .)
    NOT             reduce using rule 6 (comando -> functions .)
    INF             reduce using rule 6 (comando -> functions .)
    SUP             reduce using rule 6 (comando -> functions .)
    INFEQ           reduce using rule 6 (comando -> functions .)
    SUPEQ           reduce using rule 6 (comando -> functions .)
    SEMICOLON       reduce using rule 6 (comando -> functions .)


state 7

    (7) comando -> values .

    NUMBER          reduce using rule 7 (comando -> values .)
    STRING          reduce using rule 7 (comando -> values .)
    STDOUT          reduce using rule 7 (comando -> values .)
    DOT             reduce using rule 7 (comando -> values .)
    SPACE           reduce using rule 7 (comando -> values .)
    DUP             reduce using rule 7 (comando -> values .)
    COMMENT_LINE    reduce using rule 7 (comando -> values .)
    COMMENT_BLOCK   reduce using rule 7 (comando -> values .)
    DROP            reduce using rule 7 (comando -> values .)
    SWAP            reduce using rule 7 (comando -> values .)
    ROT             reduce using rule 7 (comando -> values .)
    OVER            reduce using rule 7 (comando -> values .)
    CONCAT          reduce using rule 7 (comando -> values .)
    CR              reduce using rule 7 (comando -> values .)
    EMIT            reduce using rule 7 (comando -> values .)
    CHAR            reduce using rule 7 (comando -> values .)
    KEY             reduce using rule 7 (comando -> values .)
    SPACES          reduce using rule 7 (comando -> values .)
    2DUP            reduce using rule 7 (comando -> values .)
    FUNCTION        reduce using rule 7 (comando -> values .)
    FUNCTION_CALL   reduce using rule 7 (comando -> values .)
    COLON           reduce using rule 7 (comando -> values .)
    $end            reduce using rule 7 (comando -> values .)
    PLUS            reduce using rule 7 (comando -> values .)
    MINUS           reduce using rule 7 (comando -> values .)
    TIMES           reduce using rule 7 (comando -> values .)
    DIVIDE          reduce using rule 7 (comando -> values .)
    MOD             reduce using rule 7 (comando -> values .)
    NOT             reduce using rule 7 (comando -> values .)
    INF             reduce using rule 7 (comando -> values .)
    SUP             reduce using rule 7 (comando -> values .)
    INFEQ           reduce using rule 7 (comando -> values .)
    SUPEQ           reduce using rule 7 (comando -> values .)
    SEMICOLON       reduce using rule 7 (comando -> values .)


state 8

    (20) functions -> stdout .

    NUMBER          reduce using rule 20 (functions -> stdout .)
    STRING          reduce using rule 20 (functions -> stdout .)
    STDOUT          reduce using rule 20 (functions -> stdout .)
    DOT             reduce using rule 20 (functions -> stdout .)
    SPACE           reduce using rule 20 (functions -> stdout .)
    DUP             reduce using rule 20 (functions -> stdout .)
    COMMENT_LINE    reduce using rule 20 (functions -> stdout .)
    COMMENT_BLOCK   reduce using rule 20 (functions -> stdout .)
    DROP            reduce using rule 20 (functions -> stdout .)
    SWAP            reduce using rule 20 (functions -> stdout .)
    ROT             reduce using rule 20 (functions -> stdout .)
    OVER            reduce using rule 20 (functions -> stdout .)
    CONCAT          reduce using rule 20 (functions -> stdout .)
    CR              reduce using rule 20 (functions -> stdout .)
    EMIT            reduce using rule 20 (functions -> stdout .)
    CHAR            reduce using rule 20 (functions -> stdout .)
    KEY             reduce using rule 20 (functions -> stdout .)
    SPACES          reduce using rule 20 (functions -> stdout .)
    2DUP            reduce using rule 20 (functions -> stdout .)
    FUNCTION        reduce using rule 20 (functions -> stdout .)
    FUNCTION_CALL   reduce using rule 20 (functions -> stdout .)
    COLON           reduce using rule 20 (functions -> stdout .)
    $end            reduce using rule 20 (functions -> stdout .)
    PLUS            reduce using rule 20 (functions -> stdout .)
    MINUS           reduce using rule 20 (functions -> stdout .)
    TIMES           reduce using rule 20 (functions -> stdout .)
    DIVIDE          reduce using rule 20 (functions -> stdout .)
    MOD             reduce using rule 20 (functions -> stdout .)
    NOT             reduce using rule 20 (functions -> stdout .)
    INF             reduce using rule 20 (functions -> stdout .)
    SUP             reduce using rule 20 (functions -> stdout .)
    INFEQ           reduce using rule 20 (functions -> stdout .)
    SUPEQ           reduce using rule 20 (functions -> stdout .)
    SEMICOLON       reduce using rule 20 (functions -> stdout .)


state 9

    (21) functions -> dot .

    NUMBER          reduce using rule 21 (functions -> dot .)
    STRING          reduce using rule 21 (functions -> dot .)
    STDOUT          reduce using rule 21 (functions -> dot .)
    DOT             reduce using rule 21 (functions -> dot .)
    SPACE           reduce using rule 21 (functions -> dot .)
    DUP             reduce using rule 21 (functions -> dot .)
    COMMENT_LINE    reduce using rule 21 (functions -> dot .)
    COMMENT_BLOCK   reduce using rule 21 (functions -> dot .)
    DROP            reduce using rule 21 (functions -> dot .)
    SWAP            reduce using rule 21 (functions -> dot .)
    ROT             reduce using rule 21 (functions -> dot .)
    OVER            reduce using rule 21 (functions -> dot .)
    CONCAT          reduce using rule 21 (functions -> dot .)
    CR              reduce using rule 21 (functions -> dot .)
    EMIT            reduce using rule 21 (functions -> dot .)
    CHAR            reduce using rule 21 (functions -> dot .)
    KEY             reduce using rule 21 (functions -> dot .)
    SPACES          reduce using rule 21 (functions -> dot .)
    2DUP            reduce using rule 21 (functions -> dot .)
    FUNCTION        reduce using rule 21 (functions -> dot .)
    FUNCTION_CALL   reduce using rule 21 (functions -> dot .)
    COLON           reduce using rule 21 (functions -> dot .)
    $end            reduce using rule 21 (functions -> dot .)
    PLUS            reduce using rule 21 (functions -> dot .)
    MINUS           reduce using rule 21 (functions -> dot .)
    TIMES           reduce using rule 21 (functions -> dot .)
    DIVIDE          reduce using rule 21 (functions -> dot .)
    MOD             reduce using rule 21 (functions -> dot .)
    NOT             reduce using rule 21 (functions -> dot .)
    INF             reduce using rule 21 (functions -> dot .)
    SUP             reduce using rule 21 (functions -> dot .)
    INFEQ           reduce using rule 21 (functions -> dot .)
    SUPEQ           reduce using rule 21 (functions -> dot .)
    SEMICOLON       reduce using rule 21 (functions -> dot .)


state 10

    (22) functions -> space .

    NUMBER          reduce using rule 22 (functions -> space .)
    STRING          reduce using rule 22 (functions -> space .)
    STDOUT          reduce using rule 22 (functions -> space .)
    DOT             reduce using rule 22 (functions -> space .)
    SPACE           reduce using rule 22 (functions -> space .)
    DUP             reduce using rule 22 (functions -> space .)
    COMMENT_LINE    reduce using rule 22 (functions -> space .)
    COMMENT_BLOCK   reduce using rule 22 (functions -> space .)
    DROP            reduce using rule 22 (functions -> space .)
    SWAP            reduce using rule 22 (functions -> space .)
    ROT             reduce using rule 22 (functions -> space .)
    OVER            reduce using rule 22 (functions -> space .)
    CONCAT          reduce using rule 22 (functions -> space .)
    CR              reduce using rule 22 (functions -> space .)
    EMIT            reduce using rule 22 (functions -> space .)
    CHAR            reduce using rule 22 (functions -> space .)
    KEY             reduce using rule 22 (functions -> space .)
    SPACES          reduce using rule 22 (functions -> space .)
    2DUP            reduce using rule 22 (functions -> space .)
    FUNCTION        reduce using rule 22 (functions -> space .)
    FUNCTION_CALL   reduce using rule 22 (functions -> space .)
    COLON           reduce using rule 22 (functions -> space .)
    $end            reduce using rule 22 (functions -> space .)
    PLUS            reduce using rule 22 (functions -> space .)
    MINUS           reduce using rule 22 (functions -> space .)
    TIMES           reduce using rule 22 (functions -> space .)
    DIVIDE          reduce using rule 22 (functions -> space .)
    MOD             reduce using rule 22 (functions -> space .)
    NOT             reduce using rule 22 (functions -> space .)
    INF             reduce using rule 22 (functions -> space .)
    SUP             reduce using rule 22 (functions -> space .)
    INFEQ           reduce using rule 22 (functions -> space .)
    SUPEQ           reduce using rule 22 (functions -> space .)
    SEMICOLON       reduce using rule 22 (functions -> space .)


state 11

    (23) functions -> dup .

    NUMBER          reduce using rule 23 (functions -> dup .)
    STRING          reduce using rule 23 (functions -> dup .)
    STDOUT          reduce using rule 23 (functions -> dup .)
    DOT             reduce using rule 23 (functions -> dup .)
    SPACE           reduce using rule 23 (functions -> dup .)
    DUP             reduce using rule 23 (functions -> dup .)
    COMMENT_LINE    reduce using rule 23 (functions -> dup .)
    COMMENT_BLOCK   reduce using rule 23 (functions -> dup .)
    DROP            reduce using rule 23 (functions -> dup .)
    SWAP            reduce using rule 23 (functions -> dup .)
    ROT             reduce using rule 23 (functions -> dup .)
    OVER            reduce using rule 23 (functions -> dup .)
    CONCAT          reduce using rule 23 (functions -> dup .)
    CR              reduce using rule 23 (functions -> dup .)
    EMIT            reduce using rule 23 (functions -> dup .)
    CHAR            reduce using rule 23 (functions -> dup .)
    KEY             reduce using rule 23 (functions -> dup .)
    SPACES          reduce using rule 23 (functions -> dup .)
    2DUP            reduce using rule 23 (functions -> dup .)
    FUNCTION        reduce using rule 23 (functions -> dup .)
    FUNCTION_CALL   reduce using rule 23 (functions -> dup .)
    COLON           reduce using rule 23 (functions -> dup .)
    $end            reduce using rule 23 (functions -> dup .)
    PLUS            reduce using rule 23 (functions -> dup .)
    MINUS           reduce using rule 23 (functions -> dup .)
    TIMES           reduce using rule 23 (functions -> dup .)
    DIVIDE          reduce using rule 23 (functions -> dup .)
    MOD             reduce using rule 23 (functions -> dup .)
    NOT             reduce using rule 23 (functions -> dup .)
    INF             reduce using rule 23 (functions -> dup .)
    SUP             reduce using rule 23 (functions -> dup .)
    INFEQ           reduce using rule 23 (functions -> dup .)
    SUPEQ           reduce using rule 23 (functions -> dup .)
    SEMICOLON       reduce using rule 23 (functions -> dup .)


state 12

    (24) functions -> comment .

    NUMBER          reduce using rule 24 (functions -> comment .)
    STRING          reduce using rule 24 (functions -> comment .)
    STDOUT          reduce using rule 24 (functions -> comment .)
    DOT             reduce using rule 24 (functions -> comment .)
    SPACE           reduce using rule 24 (functions -> comment .)
    DUP             reduce using rule 24 (functions -> comment .)
    COMMENT_LINE    reduce using rule 24 (functions -> comment .)
    COMMENT_BLOCK   reduce using rule 24 (functions -> comment .)
    DROP            reduce using rule 24 (functions -> comment .)
    SWAP            reduce using rule 24 (functions -> comment .)
    ROT             reduce using rule 24 (functions -> comment .)
    OVER            reduce using rule 24 (functions -> comment .)
    CONCAT          reduce using rule 24 (functions -> comment .)
    CR              reduce using rule 24 (functions -> comment .)
    EMIT            reduce using rule 24 (functions -> comment .)
    CHAR            reduce using rule 24 (functions -> comment .)
    KEY             reduce using rule 24 (functions -> comment .)
    SPACES          reduce using rule 24 (functions -> comment .)
    2DUP            reduce using rule 24 (functions -> comment .)
    FUNCTION        reduce using rule 24 (functions -> comment .)
    FUNCTION_CALL   reduce using rule 24 (functions -> comment .)
    COLON           reduce using rule 24 (functions -> comment .)
    $end            reduce using rule 24 (functions -> comment .)
    PLUS            reduce using rule 24 (functions -> comment .)
    MINUS           reduce using rule 24 (functions -> comment .)
    TIMES           reduce using rule 24 (functions -> comment .)
    DIVIDE          reduce using rule 24 (functions -> comment .)
    MOD             reduce using rule 24 (functions -> comment .)
    NOT             reduce using rule 24 (functions -> comment .)
    INF             reduce using rule 24 (functions -> comment .)
    SUP             reduce using rule 24 (functions -> comment .)
    INFEQ           reduce using rule 24 (functions -> comment .)
    SUPEQ           reduce using rule 24 (functions -> comment .)
    SEMICOLON       reduce using rule 24 (functions -> comment .)


state 13

    (25) functions -> drop .

    NUMBER          reduce using rule 25 (functions -> drop .)
    STRING          reduce using rule 25 (functions -> drop .)
    STDOUT          reduce using rule 25 (functions -> drop .)
    DOT             reduce using rule 25 (functions -> drop .)
    SPACE           reduce using rule 25 (functions -> drop .)
    DUP             reduce using rule 25 (functions -> drop .)
    COMMENT_LINE    reduce using rule 25 (functions -> drop .)
    COMMENT_BLOCK   reduce using rule 25 (functions -> drop .)
    DROP            reduce using rule 25 (functions -> drop .)
    SWAP            reduce using rule 25 (functions -> drop .)
    ROT             reduce using rule 25 (functions -> drop .)
    OVER            reduce using rule 25 (functions -> drop .)
    CONCAT          reduce using rule 25 (functions -> drop .)
    CR              reduce using rule 25 (functions -> drop .)
    EMIT            reduce using rule 25 (functions -> drop .)
    CHAR            reduce using rule 25 (functions -> drop .)
    KEY             reduce using rule 25 (functions -> drop .)
    SPACES          reduce using rule 25 (functions -> drop .)
    2DUP            reduce using rule 25 (functions -> drop .)
    FUNCTION        reduce using rule 25 (functions -> drop .)
    FUNCTION_CALL   reduce using rule 25 (functions -> drop .)
    COLON           reduce using rule 25 (functions -> drop .)
    $end            reduce using rule 25 (functions -> drop .)
    PLUS            reduce using rule 25 (functions -> drop .)
    MINUS           reduce using rule 25 (functions -> drop .)
    TIMES           reduce using rule 25 (functions -> drop .)
    DIVIDE          reduce using rule 25 (functions -> drop .)
    MOD             reduce using rule 25 (functions -> drop .)
    NOT             reduce using rule 25 (functions -> drop .)
    INF             reduce using rule 25 (functions -> drop .)
    SUP             reduce using rule 25 (functions -> drop .)
    INFEQ           reduce using rule 25 (functions -> drop .)
    SUPEQ           reduce using rule 25 (functions -> drop .)
    SEMICOLON       reduce using rule 25 (functions -> drop .)


state 14

    (26) functions -> swap .

    NUMBER          reduce using rule 26 (functions -> swap .)
    STRING          reduce using rule 26 (functions -> swap .)
    STDOUT          reduce using rule 26 (functions -> swap .)
    DOT             reduce using rule 26 (functions -> swap .)
    SPACE           reduce using rule 26 (functions -> swap .)
    DUP             reduce using rule 26 (functions -> swap .)
    COMMENT_LINE    reduce using rule 26 (functions -> swap .)
    COMMENT_BLOCK   reduce using rule 26 (functions -> swap .)
    DROP            reduce using rule 26 (functions -> swap .)
    SWAP            reduce using rule 26 (functions -> swap .)
    ROT             reduce using rule 26 (functions -> swap .)
    OVER            reduce using rule 26 (functions -> swap .)
    CONCAT          reduce using rule 26 (functions -> swap .)
    CR              reduce using rule 26 (functions -> swap .)
    EMIT            reduce using rule 26 (functions -> swap .)
    CHAR            reduce using rule 26 (functions -> swap .)
    KEY             reduce using rule 26 (functions -> swap .)
    SPACES          reduce using rule 26 (functions -> swap .)
    2DUP            reduce using rule 26 (functions -> swap .)
    FUNCTION        reduce using rule 26 (functions -> swap .)
    FUNCTION_CALL   reduce using rule 26 (functions -> swap .)
    COLON           reduce using rule 26 (functions -> swap .)
    $end            reduce using rule 26 (functions -> swap .)
    PLUS            reduce using rule 26 (functions -> swap .)
    MINUS           reduce using rule 26 (functions -> swap .)
    TIMES           reduce using rule 26 (functions -> swap .)
    DIVIDE          reduce using rule 26 (functions -> swap .)
    MOD             reduce using rule 26 (functions -> swap .)
    NOT             reduce using rule 26 (functions -> swap .)
    INF             reduce using rule 26 (functions -> swap .)
    SUP             reduce using rule 26 (functions -> swap .)
    INFEQ           reduce using rule 26 (functions -> swap .)
    SUPEQ           reduce using rule 26 (functions -> swap .)
    SEMICOLON       reduce using rule 26 (functions -> swap .)


state 15

    (27) functions -> rot .

    NUMBER          reduce using rule 27 (functions -> rot .)
    STRING          reduce using rule 27 (functions -> rot .)
    STDOUT          reduce using rule 27 (functions -> rot .)
    DOT             reduce using rule 27 (functions -> rot .)
    SPACE           reduce using rule 27 (functions -> rot .)
    DUP             reduce using rule 27 (functions -> rot .)
    COMMENT_LINE    reduce using rule 27 (functions -> rot .)
    COMMENT_BLOCK   reduce using rule 27 (functions -> rot .)
    DROP            reduce using rule 27 (functions -> rot .)
    SWAP            reduce using rule 27 (functions -> rot .)
    ROT             reduce using rule 27 (functions -> rot .)
    OVER            reduce using rule 27 (functions -> rot .)
    CONCAT          reduce using rule 27 (functions -> rot .)
    CR              reduce using rule 27 (functions -> rot .)
    EMIT            reduce using rule 27 (functions -> rot .)
    CHAR            reduce using rule 27 (functions -> rot .)
    KEY             reduce using rule 27 (functions -> rot .)
    SPACES          reduce using rule 27 (functions -> rot .)
    2DUP            reduce using rule 27 (functions -> rot .)
    FUNCTION        reduce using rule 27 (functions -> rot .)
    FUNCTION_CALL   reduce using rule 27 (functions -> rot .)
    COLON           reduce using rule 27 (functions -> rot .)
    $end            reduce using rule 27 (functions -> rot .)
    PLUS            reduce using rule 27 (functions -> rot .)
    MINUS           reduce using rule 27 (functions -> rot .)
    TIMES           reduce using rule 27 (functions -> rot .)
    DIVIDE          reduce using rule 27 (functions -> rot .)
    MOD             reduce using rule 27 (functions -> rot .)
    NOT             reduce using rule 27 (functions -> rot .)
    INF             reduce using rule 27 (functions -> rot .)
    SUP             reduce using rule 27 (functions -> rot .)
    INFEQ           reduce using rule 27 (functions -> rot .)
    SUPEQ           reduce using rule 27 (functions -> rot .)
    SEMICOLON       reduce using rule 27 (functions -> rot .)


state 16

    (28) functions -> over .

    NUMBER          reduce using rule 28 (functions -> over .)
    STRING          reduce using rule 28 (functions -> over .)
    STDOUT          reduce using rule 28 (functions -> over .)
    DOT             reduce using rule 28 (functions -> over .)
    SPACE           reduce using rule 28 (functions -> over .)
    DUP             reduce using rule 28 (functions -> over .)
    COMMENT_LINE    reduce using rule 28 (functions -> over .)
    COMMENT_BLOCK   reduce using rule 28 (functions -> over .)
    DROP            reduce using rule 28 (functions -> over .)
    SWAP            reduce using rule 28 (functions -> over .)
    ROT             reduce using rule 28 (functions -> over .)
    OVER            reduce using rule 28 (functions -> over .)
    CONCAT          reduce using rule 28 (functions -> over .)
    CR              reduce using rule 28 (functions -> over .)
    EMIT            reduce using rule 28 (functions -> over .)
    CHAR            reduce using rule 28 (functions -> over .)
    KEY             reduce using rule 28 (functions -> over .)
    SPACES          reduce using rule 28 (functions -> over .)
    2DUP            reduce using rule 28 (functions -> over .)
    FUNCTION        reduce using rule 28 (functions -> over .)
    FUNCTION_CALL   reduce using rule 28 (functions -> over .)
    COLON           reduce using rule 28 (functions -> over .)
    $end            reduce using rule 28 (functions -> over .)
    PLUS            reduce using rule 28 (functions -> over .)
    MINUS           reduce using rule 28 (functions -> over .)
    TIMES           reduce using rule 28 (functions -> over .)
    DIVIDE          reduce using rule 28 (functions -> over .)
    MOD             reduce using rule 28 (functions -> over .)
    NOT             reduce using rule 28 (functions -> over .)
    INF             reduce using rule 28 (functions -> over .)
    SUP             reduce using rule 28 (functions -> over .)
    INFEQ           reduce using rule 28 (functions -> over .)
    SUPEQ           reduce using rule 28 (functions -> over .)
    SEMICOLON       reduce using rule 28 (functions -> over .)


state 17

    (29) functions -> concat .

    NUMBER          reduce using rule 29 (functions -> concat .)
    STRING          reduce using rule 29 (functions -> concat .)
    STDOUT          reduce using rule 29 (functions -> concat .)
    DOT             reduce using rule 29 (functions -> concat .)
    SPACE           reduce using rule 29 (functions -> concat .)
    DUP             reduce using rule 29 (functions -> concat .)
    COMMENT_LINE    reduce using rule 29 (functions -> concat .)
    COMMENT_BLOCK   reduce using rule 29 (functions -> concat .)
    DROP            reduce using rule 29 (functions -> concat .)
    SWAP            reduce using rule 29 (functions -> concat .)
    ROT             reduce using rule 29 (functions -> concat .)
    OVER            reduce using rule 29 (functions -> concat .)
    CONCAT          reduce using rule 29 (functions -> concat .)
    CR              reduce using rule 29 (functions -> concat .)
    EMIT            reduce using rule 29 (functions -> concat .)
    CHAR            reduce using rule 29 (functions -> concat .)
    KEY             reduce using rule 29 (functions -> concat .)
    SPACES          reduce using rule 29 (functions -> concat .)
    2DUP            reduce using rule 29 (functions -> concat .)
    FUNCTION        reduce using rule 29 (functions -> concat .)
    FUNCTION_CALL   reduce using rule 29 (functions -> concat .)
    COLON           reduce using rule 29 (functions -> concat .)
    $end            reduce using rule 29 (functions -> concat .)
    PLUS            reduce using rule 29 (functions -> concat .)
    MINUS           reduce using rule 29 (functions -> concat .)
    TIMES           reduce using rule 29 (functions -> concat .)
    DIVIDE          reduce using rule 29 (functions -> concat .)
    MOD             reduce using rule 29 (functions -> concat .)
    NOT             reduce using rule 29 (functions -> concat .)
    INF             reduce using rule 29 (functions -> concat .)
    SUP             reduce using rule 29 (functions -> concat .)
    INFEQ           reduce using rule 29 (functions -> concat .)
    SUPEQ           reduce using rule 29 (functions -> concat .)
    SEMICOLON       reduce using rule 29 (functions -> concat .)


state 18

    (30) functions -> cr .

    NUMBER          reduce using rule 30 (functions -> cr .)
    STRING          reduce using rule 30 (functions -> cr .)
    STDOUT          reduce using rule 30 (functions -> cr .)
    DOT             reduce using rule 30 (functions -> cr .)
    SPACE           reduce using rule 30 (functions -> cr .)
    DUP             reduce using rule 30 (functions -> cr .)
    COMMENT_LINE    reduce using rule 30 (functions -> cr .)
    COMMENT_BLOCK   reduce using rule 30 (functions -> cr .)
    DROP            reduce using rule 30 (functions -> cr .)
    SWAP            reduce using rule 30 (functions -> cr .)
    ROT             reduce using rule 30 (functions -> cr .)
    OVER            reduce using rule 30 (functions -> cr .)
    CONCAT          reduce using rule 30 (functions -> cr .)
    CR              reduce using rule 30 (functions -> cr .)
    EMIT            reduce using rule 30 (functions -> cr .)
    CHAR            reduce using rule 30 (functions -> cr .)
    KEY             reduce using rule 30 (functions -> cr .)
    SPACES          reduce using rule 30 (functions -> cr .)
    2DUP            reduce using rule 30 (functions -> cr .)
    FUNCTION        reduce using rule 30 (functions -> cr .)
    FUNCTION_CALL   reduce using rule 30 (functions -> cr .)
    COLON           reduce using rule 30 (functions -> cr .)
    $end            reduce using rule 30 (functions -> cr .)
    PLUS            reduce using rule 30 (functions -> cr .)
    MINUS           reduce using rule 30 (functions -> cr .)
    TIMES           reduce using rule 30 (functions -> cr .)
    DIVIDE          reduce using rule 30 (functions -> cr .)
    MOD             reduce using rule 30 (functions -> cr .)
    NOT             reduce using rule 30 (functions -> cr .)
    INF             reduce using rule 30 (functions -> cr .)
    SUP             reduce using rule 30 (functions -> cr .)
    INFEQ           reduce using rule 30 (functions -> cr .)
    SUPEQ           reduce using rule 30 (functions -> cr .)
    SEMICOLON       reduce using rule 30 (functions -> cr .)


state 19

    (31) functions -> emit .

    NUMBER          reduce using rule 31 (functions -> emit .)
    STRING          reduce using rule 31 (functions -> emit .)
    STDOUT          reduce using rule 31 (functions -> emit .)
    DOT             reduce using rule 31 (functions -> emit .)
    SPACE           reduce using rule 31 (functions -> emit .)
    DUP             reduce using rule 31 (functions -> emit .)
    COMMENT_LINE    reduce using rule 31 (functions -> emit .)
    COMMENT_BLOCK   reduce using rule 31 (functions -> emit .)
    DROP            reduce using rule 31 (functions -> emit .)
    SWAP            reduce using rule 31 (functions -> emit .)
    ROT             reduce using rule 31 (functions -> emit .)
    OVER            reduce using rule 31 (functions -> emit .)
    CONCAT          reduce using rule 31 (functions -> emit .)
    CR              reduce using rule 31 (functions -> emit .)
    EMIT            reduce using rule 31 (functions -> emit .)
    CHAR            reduce using rule 31 (functions -> emit .)
    KEY             reduce using rule 31 (functions -> emit .)
    SPACES          reduce using rule 31 (functions -> emit .)
    2DUP            reduce using rule 31 (functions -> emit .)
    FUNCTION        reduce using rule 31 (functions -> emit .)
    FUNCTION_CALL   reduce using rule 31 (functions -> emit .)
    COLON           reduce using rule 31 (functions -> emit .)
    $end            reduce using rule 31 (functions -> emit .)
    PLUS            reduce using rule 31 (functions -> emit .)
    MINUS           reduce using rule 31 (functions -> emit .)
    TIMES           reduce using rule 31 (functions -> emit .)
    DIVIDE          reduce using rule 31 (functions -> emit .)
    MOD             reduce using rule 31 (functions -> emit .)
    NOT             reduce using rule 31 (functions -> emit .)
    INF             reduce using rule 31 (functions -> emit .)
    SUP             reduce using rule 31 (functions -> emit .)
    INFEQ           reduce using rule 31 (functions -> emit .)
    SUPEQ           reduce using rule 31 (functions -> emit .)
    SEMICOLON       reduce using rule 31 (functions -> emit .)


state 20

    (32) functions -> char .

    NUMBER          reduce using rule 32 (functions -> char .)
    STRING          reduce using rule 32 (functions -> char .)
    STDOUT          reduce using rule 32 (functions -> char .)
    DOT             reduce using rule 32 (functions -> char .)
    SPACE           reduce using rule 32 (functions -> char .)
    DUP             reduce using rule 32 (functions -> char .)
    COMMENT_LINE    reduce using rule 32 (functions -> char .)
    COMMENT_BLOCK   reduce using rule 32 (functions -> char .)
    DROP            reduce using rule 32 (functions -> char .)
    SWAP            reduce using rule 32 (functions -> char .)
    ROT             reduce using rule 32 (functions -> char .)
    OVER            reduce using rule 32 (functions -> char .)
    CONCAT          reduce using rule 32 (functions -> char .)
    CR              reduce using rule 32 (functions -> char .)
    EMIT            reduce using rule 32 (functions -> char .)
    CHAR            reduce using rule 32 (functions -> char .)
    KEY             reduce using rule 32 (functions -> char .)
    SPACES          reduce using rule 32 (functions -> char .)
    2DUP            reduce using rule 32 (functions -> char .)
    FUNCTION        reduce using rule 32 (functions -> char .)
    FUNCTION_CALL   reduce using rule 32 (functions -> char .)
    COLON           reduce using rule 32 (functions -> char .)
    $end            reduce using rule 32 (functions -> char .)
    PLUS            reduce using rule 32 (functions -> char .)
    MINUS           reduce using rule 32 (functions -> char .)
    TIMES           reduce using rule 32 (functions -> char .)
    DIVIDE          reduce using rule 32 (functions -> char .)
    MOD             reduce using rule 32 (functions -> char .)
    NOT             reduce using rule 32 (functions -> char .)
    INF             reduce using rule 32 (functions -> char .)
    SUP             reduce using rule 32 (functions -> char .)
    INFEQ           reduce using rule 32 (functions -> char .)
    SUPEQ           reduce using rule 32 (functions -> char .)
    SEMICOLON       reduce using rule 32 (functions -> char .)


state 21

    (33) functions -> key .

    NUMBER          reduce using rule 33 (functions -> key .)
    STRING          reduce using rule 33 (functions -> key .)
    STDOUT          reduce using rule 33 (functions -> key .)
    DOT             reduce using rule 33 (functions -> key .)
    SPACE           reduce using rule 33 (functions -> key .)
    DUP             reduce using rule 33 (functions -> key .)
    COMMENT_LINE    reduce using rule 33 (functions -> key .)
    COMMENT_BLOCK   reduce using rule 33 (functions -> key .)
    DROP            reduce using rule 33 (functions -> key .)
    SWAP            reduce using rule 33 (functions -> key .)
    ROT             reduce using rule 33 (functions -> key .)
    OVER            reduce using rule 33 (functions -> key .)
    CONCAT          reduce using rule 33 (functions -> key .)
    CR              reduce using rule 33 (functions -> key .)
    EMIT            reduce using rule 33 (functions -> key .)
    CHAR            reduce using rule 33 (functions -> key .)
    KEY             reduce using rule 33 (functions -> key .)
    SPACES          reduce using rule 33 (functions -> key .)
    2DUP            reduce using rule 33 (functions -> key .)
    FUNCTION        reduce using rule 33 (functions -> key .)
    FUNCTION_CALL   reduce using rule 33 (functions -> key .)
    COLON           reduce using rule 33 (functions -> key .)
    $end            reduce using rule 33 (functions -> key .)
    PLUS            reduce using rule 33 (functions -> key .)
    MINUS           reduce using rule 33 (functions -> key .)
    TIMES           reduce using rule 33 (functions -> key .)
    DIVIDE          reduce using rule 33 (functions -> key .)
    MOD             reduce using rule 33 (functions -> key .)
    NOT             reduce using rule 33 (functions -> key .)
    INF             reduce using rule 33 (functions -> key .)
    SUP             reduce using rule 33 (functions -> key .)
    INFEQ           reduce using rule 33 (functions -> key .)
    SUPEQ           reduce using rule 33 (functions -> key .)
    SEMICOLON       reduce using rule 33 (functions -> key .)


state 22

    (34) functions -> spaces .

    NUMBER          reduce using rule 34 (functions -> spaces .)
    STRING          reduce using rule 34 (functions -> spaces .)
    STDOUT          reduce using rule 34 (functions -> spaces .)
    DOT             reduce using rule 34 (functions -> spaces .)
    SPACE           reduce using rule 34 (functions -> spaces .)
    DUP             reduce using rule 34 (functions -> spaces .)
    COMMENT_LINE    reduce using rule 34 (functions -> spaces .)
    COMMENT_BLOCK   reduce using rule 34 (functions -> spaces .)
    DROP            reduce using rule 34 (functions -> spaces .)
    SWAP            reduce using rule 34 (functions -> spaces .)
    ROT             reduce using rule 34 (functions -> spaces .)
    OVER            reduce using rule 34 (functions -> spaces .)
    CONCAT          reduce using rule 34 (functions -> spaces .)
    CR              reduce using rule 34 (functions -> spaces .)
    EMIT            reduce using rule 34 (functions -> spaces .)
    CHAR            reduce using rule 34 (functions -> spaces .)
    KEY             reduce using rule 34 (functions -> spaces .)
    SPACES          reduce using rule 34 (functions -> spaces .)
    2DUP            reduce using rule 34 (functions -> spaces .)
    FUNCTION        reduce using rule 34 (functions -> spaces .)
    FUNCTION_CALL   reduce using rule 34 (functions -> spaces .)
    COLON           reduce using rule 34 (functions -> spaces .)
    $end            reduce using rule 34 (functions -> spaces .)
    PLUS            reduce using rule 34 (functions -> spaces .)
    MINUS           reduce using rule 34 (functions -> spaces .)
    TIMES           reduce using rule 34 (functions -> spaces .)
    DIVIDE          reduce using rule 34 (functions -> spaces .)
    MOD             reduce using rule 34 (functions -> spaces .)
    NOT             reduce using rule 34 (functions -> spaces .)
    INF             reduce using rule 34 (functions -> spaces .)
    SUP             reduce using rule 34 (functions -> spaces .)
    INFEQ           reduce using rule 34 (functions -> spaces .)
    SUPEQ           reduce using rule 34 (functions -> spaces .)
    SEMICOLON       reduce using rule 34 (functions -> spaces .)


state 23

    (35) functions -> 2dup .

    NUMBER          reduce using rule 35 (functions -> 2dup .)
    STRING          reduce using rule 35 (functions -> 2dup .)
    STDOUT          reduce using rule 35 (functions -> 2dup .)
    DOT             reduce using rule 35 (functions -> 2dup .)
    SPACE           reduce using rule 35 (functions -> 2dup .)
    DUP             reduce using rule 35 (functions -> 2dup .)
    COMMENT_LINE    reduce using rule 35 (functions -> 2dup .)
    COMMENT_BLOCK   reduce using rule 35 (functions -> 2dup .)
    DROP            reduce using rule 35 (functions -> 2dup .)
    SWAP            reduce using rule 35 (functions -> 2dup .)
    ROT             reduce using rule 35 (functions -> 2dup .)
    OVER            reduce using rule 35 (functions -> 2dup .)
    CONCAT          reduce using rule 35 (functions -> 2dup .)
    CR              reduce using rule 35 (functions -> 2dup .)
    EMIT            reduce using rule 35 (functions -> 2dup .)
    CHAR            reduce using rule 35 (functions -> 2dup .)
    KEY             reduce using rule 35 (functions -> 2dup .)
    SPACES          reduce using rule 35 (functions -> 2dup .)
    2DUP            reduce using rule 35 (functions -> 2dup .)
    FUNCTION        reduce using rule 35 (functions -> 2dup .)
    FUNCTION_CALL   reduce using rule 35 (functions -> 2dup .)
    COLON           reduce using rule 35 (functions -> 2dup .)
    $end            reduce using rule 35 (functions -> 2dup .)
    PLUS            reduce using rule 35 (functions -> 2dup .)
    MINUS           reduce using rule 35 (functions -> 2dup .)
    TIMES           reduce using rule 35 (functions -> 2dup .)
    DIVIDE          reduce using rule 35 (functions -> 2dup .)
    MOD             reduce using rule 35 (functions -> 2dup .)
    NOT             reduce using rule 35 (functions -> 2dup .)
    INF             reduce using rule 35 (functions -> 2dup .)
    SUP             reduce using rule 35 (functions -> 2dup .)
    INFEQ           reduce using rule 35 (functions -> 2dup .)
    SUPEQ           reduce using rule 35 (functions -> 2dup .)
    SEMICOLON       reduce using rule 35 (functions -> 2dup .)


state 24

    (36) functions -> function .

    NUMBER          reduce using rule 36 (functions -> function .)
    STRING          reduce using rule 36 (functions -> function .)
    STDOUT          reduce using rule 36 (functions -> function .)
    DOT             reduce using rule 36 (functions -> function .)
    SPACE           reduce using rule 36 (functions -> function .)
    DUP             reduce using rule 36 (functions -> function .)
    COMMENT_LINE    reduce using rule 36 (functions -> function .)
    COMMENT_BLOCK   reduce using rule 36 (functions -> function .)
    DROP            reduce using rule 36 (functions -> function .)
    SWAP            reduce using rule 36 (functions -> function .)
    ROT             reduce using rule 36 (functions -> function .)
    OVER            reduce using rule 36 (functions -> function .)
    CONCAT          reduce using rule 36 (functions -> function .)
    CR              reduce using rule 36 (functions -> function .)
    EMIT            reduce using rule 36 (functions -> function .)
    CHAR            reduce using rule 36 (functions -> function .)
    KEY             reduce using rule 36 (functions -> function .)
    SPACES          reduce using rule 36 (functions -> function .)
    2DUP            reduce using rule 36 (functions -> function .)
    FUNCTION        reduce using rule 36 (functions -> function .)
    FUNCTION_CALL   reduce using rule 36 (functions -> function .)
    COLON           reduce using rule 36 (functions -> function .)
    $end            reduce using rule 36 (functions -> function .)
    PLUS            reduce using rule 36 (functions -> function .)
    MINUS           reduce using rule 36 (functions -> function .)
    TIMES           reduce using rule 36 (functions -> function .)
    DIVIDE          reduce using rule 36 (functions -> function .)
    MOD             reduce using rule 36 (functions -> function .)
    NOT             reduce using rule 36 (functions -> function .)
    INF             reduce using rule 36 (functions -> function .)
    SUP             reduce using rule 36 (functions -> function .)
    INFEQ           reduce using rule 36 (functions -> function .)
    SUPEQ           reduce using rule 36 (functions -> function .)
    SEMICOLON       reduce using rule 36 (functions -> function .)


state 25

    (37) functions -> func_criadas .

    NUMBER          reduce using rule 37 (functions -> func_criadas .)
    STRING          reduce using rule 37 (functions -> func_criadas .)
    STDOUT          reduce using rule 37 (functions -> func_criadas .)
    DOT             reduce using rule 37 (functions -> func_criadas .)
    SPACE           reduce using rule 37 (functions -> func_criadas .)
    DUP             reduce using rule 37 (functions -> func_criadas .)
    COMMENT_LINE    reduce using rule 37 (functions -> func_criadas .)
    COMMENT_BLOCK   reduce using rule 37 (functions -> func_criadas .)
    DROP            reduce using rule 37 (functions -> func_criadas .)
    SWAP            reduce using rule 37 (functions -> func_criadas .)
    ROT             reduce using rule 37 (functions -> func_criadas .)
    OVER            reduce using rule 37 (functions -> func_criadas .)
    CONCAT          reduce using rule 37 (functions -> func_criadas .)
    CR              reduce using rule 37 (functions -> func_criadas .)
    EMIT            reduce using rule 37 (functions -> func_criadas .)
    CHAR            reduce using rule 37 (functions -> func_criadas .)
    KEY             reduce using rule 37 (functions -> func_criadas .)
    SPACES          reduce using rule 37 (functions -> func_criadas .)
    2DUP            reduce using rule 37 (functions -> func_criadas .)
    FUNCTION        reduce using rule 37 (functions -> func_criadas .)
    FUNCTION_CALL   reduce using rule 37 (functions -> func_criadas .)
    COLON           reduce using rule 37 (functions -> func_criadas .)
    $end            reduce using rule 37 (functions -> func_criadas .)
    PLUS            reduce using rule 37 (functions -> func_criadas .)
    MINUS           reduce using rule 37 (functions -> func_criadas .)
    TIMES           reduce using rule 37 (functions -> func_criadas .)
    DIVIDE          reduce using rule 37 (functions -> func_criadas .)
    MOD             reduce using rule 37 (functions -> func_criadas .)
    NOT             reduce using rule 37 (functions -> func_criadas .)
    INF             reduce using rule 37 (functions -> func_criadas .)
    SUP             reduce using rule 37 (functions -> func_criadas .)
    INFEQ           reduce using rule 37 (functions -> func_criadas .)
    SUPEQ           reduce using rule 37 (functions -> func_criadas .)
    SEMICOLON       reduce using rule 37 (functions -> func_criadas .)


state 26

    (18) values -> NUMBER .

    NUMBER          reduce using rule 18 (values -> NUMBER .)
    STRING          reduce using rule 18 (values -> NUMBER .)
    STDOUT          reduce using rule 18 (values -> NUMBER .)
    DOT             reduce using rule 18 (values -> NUMBER .)
    SPACE           reduce using rule 18 (values -> NUMBER .)
    DUP             reduce using rule 18 (values -> NUMBER .)
    COMMENT_LINE    reduce using rule 18 (values -> NUMBER .)
    COMMENT_BLOCK   reduce using rule 18 (values -> NUMBER .)
    DROP            reduce using rule 18 (values -> NUMBER .)
    SWAP            reduce using rule 18 (values -> NUMBER .)
    ROT             reduce using rule 18 (values -> NUMBER .)
    OVER            reduce using rule 18 (values -> NUMBER .)
    CONCAT          reduce using rule 18 (values -> NUMBER .)
    CR              reduce using rule 18 (values -> NUMBER .)
    EMIT            reduce using rule 18 (values -> NUMBER .)
    CHAR            reduce using rule 18 (values -> NUMBER .)
    KEY             reduce using rule 18 (values -> NUMBER .)
    SPACES          reduce using rule 18 (values -> NUMBER .)
    2DUP            reduce using rule 18 (values -> NUMBER .)
    FUNCTION        reduce using rule 18 (values -> NUMBER .)
    FUNCTION_CALL   reduce using rule 18 (values -> NUMBER .)
    COLON           reduce using rule 18 (values -> NUMBER .)
    $end            reduce using rule 18 (values -> NUMBER .)
    PLUS            reduce using rule 18 (values -> NUMBER .)
    MINUS           reduce using rule 18 (values -> NUMBER .)
    TIMES           reduce using rule 18 (values -> NUMBER .)
    DIVIDE          reduce using rule 18 (values -> NUMBER .)
    MOD             reduce using rule 18 (values -> NUMBER .)
    NOT             reduce using rule 18 (values -> NUMBER .)
    INF             reduce using rule 18 (values -> NUMBER .)
    SUP             reduce using rule 18 (values -> NUMBER .)
    INFEQ           reduce using rule 18 (values -> NUMBER .)
    SUPEQ           reduce using rule 18 (values -> NUMBER .)
    SEMICOLON       reduce using rule 18 (values -> NUMBER .)


state 27

    (19) values -> STRING .

    NUMBER          reduce using rule 19 (values -> STRING .)
    STRING          reduce using rule 19 (values -> STRING .)
    STDOUT          reduce using rule 19 (values -> STRING .)
    DOT             reduce using rule 19 (values -> STRING .)
    SPACE           reduce using rule 19 (values -> STRING .)
    DUP             reduce using rule 19 (values -> STRING .)
    COMMENT_LINE    reduce using rule 19 (values -> STRING .)
    COMMENT_BLOCK   reduce using rule 19 (values -> STRING .)
    DROP            reduce using rule 19 (values -> STRING .)
    SWAP            reduce using rule 19 (values -> STRING .)
    ROT             reduce using rule 19 (values -> STRING .)
    OVER            reduce using rule 19 (values -> STRING .)
    CONCAT          reduce using rule 19 (values -> STRING .)
    CR              reduce using rule 19 (values -> STRING .)
    EMIT            reduce using rule 19 (values -> STRING .)
    CHAR            reduce using rule 19 (values -> STRING .)
    KEY             reduce using rule 19 (values -> STRING .)
    SPACES          reduce using rule 19 (values -> STRING .)
    2DUP            reduce using rule 19 (values -> STRING .)
    FUNCTION        reduce using rule 19 (values -> STRING .)
    FUNCTION_CALL   reduce using rule 19 (values -> STRING .)
    COLON           reduce using rule 19 (values -> STRING .)
    $end            reduce using rule 19 (values -> STRING .)
    PLUS            reduce using rule 19 (values -> STRING .)
    MINUS           reduce using rule 19 (values -> STRING .)
    TIMES           reduce using rule 19 (values -> STRING .)
    DIVIDE          reduce using rule 19 (values -> STRING .)
    MOD             reduce using rule 19 (values -> STRING .)
    NOT             reduce using rule 19 (values -> STRING .)
    INF             reduce using rule 19 (values -> STRING .)
    SUP             reduce using rule 19 (values -> STRING .)
    INFEQ           reduce using rule 19 (values -> STRING .)
    SUPEQ           reduce using rule 19 (values -> STRING .)
    SEMICOLON       reduce using rule 19 (values -> STRING .)


state 28

    (38) stdout -> STDOUT .

    NUMBER          reduce using rule 38 (stdout -> STDOUT .)
    STRING          reduce using rule 38 (stdout -> STDOUT .)
    STDOUT          reduce using rule 38 (stdout -> STDOUT .)
    DOT             reduce using rule 38 (stdout -> STDOUT .)
    SPACE           reduce using rule 38 (stdout -> STDOUT .)
    DUP             reduce using rule 38 (stdout -> STDOUT .)
    COMMENT_LINE    reduce using rule 38 (stdout -> STDOUT .)
    COMMENT_BLOCK   reduce using rule 38 (stdout -> STDOUT .)
    DROP            reduce using rule 38 (stdout -> STDOUT .)
    SWAP            reduce using rule 38 (stdout -> STDOUT .)
    ROT             reduce using rule 38 (stdout -> STDOUT .)
    OVER            reduce using rule 38 (stdout -> STDOUT .)
    CONCAT          reduce using rule 38 (stdout -> STDOUT .)
    CR              reduce using rule 38 (stdout -> STDOUT .)
    EMIT            reduce using rule 38 (stdout -> STDOUT .)
    CHAR            reduce using rule 38 (stdout -> STDOUT .)
    KEY             reduce using rule 38 (stdout -> STDOUT .)
    SPACES          reduce using rule 38 (stdout -> STDOUT .)
    2DUP            reduce using rule 38 (stdout -> STDOUT .)
    FUNCTION        reduce using rule 38 (stdout -> STDOUT .)
    FUNCTION_CALL   reduce using rule 38 (stdout -> STDOUT .)
    COLON           reduce using rule 38 (stdout -> STDOUT .)
    $end            reduce using rule 38 (stdout -> STDOUT .)
    PLUS            reduce using rule 38 (stdout -> STDOUT .)
    MINUS           reduce using rule 38 (stdout -> STDOUT .)
    TIMES           reduce using rule 38 (stdout -> STDOUT .)
    DIVIDE          reduce using rule 38 (stdout -> STDOUT .)
    MOD             reduce using rule 38 (stdout -> STDOUT .)
    NOT             reduce using rule 38 (stdout -> STDOUT .)
    INF             reduce using rule 38 (stdout -> STDOUT .)
    SUP             reduce using rule 38 (stdout -> STDOUT .)
    INFEQ           reduce using rule 38 (stdout -> STDOUT .)
    SUPEQ           reduce using rule 38 (stdout -> STDOUT .)
    SEMICOLON       reduce using rule 38 (stdout -> STDOUT .)


state 29

    (39) dot -> DOT .

    NUMBER          reduce using rule 39 (dot -> DOT .)
    STRING          reduce using rule 39 (dot -> DOT .)
    STDOUT          reduce using rule 39 (dot -> DOT .)
    DOT             reduce using rule 39 (dot -> DOT .)
    SPACE           reduce using rule 39 (dot -> DOT .)
    DUP             reduce using rule 39 (dot -> DOT .)
    COMMENT_LINE    reduce using rule 39 (dot -> DOT .)
    COMMENT_BLOCK   reduce using rule 39 (dot -> DOT .)
    DROP            reduce using rule 39 (dot -> DOT .)
    SWAP            reduce using rule 39 (dot -> DOT .)
    ROT             reduce using rule 39 (dot -> DOT .)
    OVER            reduce using rule 39 (dot -> DOT .)
    CONCAT          reduce using rule 39 (dot -> DOT .)
    CR              reduce using rule 39 (dot -> DOT .)
    EMIT            reduce using rule 39 (dot -> DOT .)
    CHAR            reduce using rule 39 (dot -> DOT .)
    KEY             reduce using rule 39 (dot -> DOT .)
    SPACES          reduce using rule 39 (dot -> DOT .)
    2DUP            reduce using rule 39 (dot -> DOT .)
    FUNCTION        reduce using rule 39 (dot -> DOT .)
    FUNCTION_CALL   reduce using rule 39 (dot -> DOT .)
    COLON           reduce using rule 39 (dot -> DOT .)
    $end            reduce using rule 39 (dot -> DOT .)
    PLUS            reduce using rule 39 (dot -> DOT .)
    MINUS           reduce using rule 39 (dot -> DOT .)
    TIMES           reduce using rule 39 (dot -> DOT .)
    DIVIDE          reduce using rule 39 (dot -> DOT .)
    MOD             reduce using rule 39 (dot -> DOT .)
    NOT             reduce using rule 39 (dot -> DOT .)
    INF             reduce using rule 39 (dot -> DOT .)
    SUP             reduce using rule 39 (dot -> DOT .)
    INFEQ           reduce using rule 39 (dot -> DOT .)
    SUPEQ           reduce using rule 39 (dot -> DOT .)
    SEMICOLON       reduce using rule 39 (dot -> DOT .)


state 30

    (40) space -> SPACE .

    NUMBER          reduce using rule 40 (space -> SPACE .)
    STRING          reduce using rule 40 (space -> SPACE .)
    STDOUT          reduce using rule 40 (space -> SPACE .)
    DOT             reduce using rule 40 (space -> SPACE .)
    SPACE           reduce using rule 40 (space -> SPACE .)
    DUP             reduce using rule 40 (space -> SPACE .)
    COMMENT_LINE    reduce using rule 40 (space -> SPACE .)
    COMMENT_BLOCK   reduce using rule 40 (space -> SPACE .)
    DROP            reduce using rule 40 (space -> SPACE .)
    SWAP            reduce using rule 40 (space -> SPACE .)
    ROT             reduce using rule 40 (space -> SPACE .)
    OVER            reduce using rule 40 (space -> SPACE .)
    CONCAT          reduce using rule 40 (space -> SPACE .)
    CR              reduce using rule 40 (space -> SPACE .)
    EMIT            reduce using rule 40 (space -> SPACE .)
    CHAR            reduce using rule 40 (space -> SPACE .)
    KEY             reduce using rule 40 (space -> SPACE .)
    SPACES          reduce using rule 40 (space -> SPACE .)
    2DUP            reduce using rule 40 (space -> SPACE .)
    FUNCTION        reduce using rule 40 (space -> SPACE .)
    FUNCTION_CALL   reduce using rule 40 (space -> SPACE .)
    COLON           reduce using rule 40 (space -> SPACE .)
    $end            reduce using rule 40 (space -> SPACE .)
    PLUS            reduce using rule 40 (space -> SPACE .)
    MINUS           reduce using rule 40 (space -> SPACE .)
    TIMES           reduce using rule 40 (space -> SPACE .)
    DIVIDE          reduce using rule 40 (space -> SPACE .)
    MOD             reduce using rule 40 (space -> SPACE .)
    NOT             reduce using rule 40 (space -> SPACE .)
    INF             reduce using rule 40 (space -> SPACE .)
    SUP             reduce using rule 40 (space -> SPACE .)
    INFEQ           reduce using rule 40 (space -> SPACE .)
    SUPEQ           reduce using rule 40 (space -> SPACE .)
    SEMICOLON       reduce using rule 40 (space -> SPACE .)


state 31

    (41) dup -> DUP .

    NUMBER          reduce using rule 41 (dup -> DUP .)
    STRING          reduce using rule 41 (dup -> DUP .)
    STDOUT          reduce using rule 41 (dup -> DUP .)
    DOT             reduce using rule 41 (dup -> DUP .)
    SPACE           reduce using rule 41 (dup -> DUP .)
    DUP             reduce using rule 41 (dup -> DUP .)
    COMMENT_LINE    reduce using rule 41 (dup -> DUP .)
    COMMENT_BLOCK   reduce using rule 41 (dup -> DUP .)
    DROP            reduce using rule 41 (dup -> DUP .)
    SWAP            reduce using rule 41 (dup -> DUP .)
    ROT             reduce using rule 41 (dup -> DUP .)
    OVER            reduce using rule 41 (dup -> DUP .)
    CONCAT          reduce using rule 41 (dup -> DUP .)
    CR              reduce using rule 41 (dup -> DUP .)
    EMIT            reduce using rule 41 (dup -> DUP .)
    CHAR            reduce using rule 41 (dup -> DUP .)
    KEY             reduce using rule 41 (dup -> DUP .)
    SPACES          reduce using rule 41 (dup -> DUP .)
    2DUP            reduce using rule 41 (dup -> DUP .)
    FUNCTION        reduce using rule 41 (dup -> DUP .)
    FUNCTION_CALL   reduce using rule 41 (dup -> DUP .)
    COLON           reduce using rule 41 (dup -> DUP .)
    $end            reduce using rule 41 (dup -> DUP .)
    PLUS            reduce using rule 41 (dup -> DUP .)
    MINUS           reduce using rule 41 (dup -> DUP .)
    TIMES           reduce using rule 41 (dup -> DUP .)
    DIVIDE          reduce using rule 41 (dup -> DUP .)
    MOD             reduce using rule 41 (dup -> DUP .)
    NOT             reduce using rule 41 (dup -> DUP .)
    INF             reduce using rule 41 (dup -> DUP .)
    SUP             reduce using rule 41 (dup -> DUP .)
    INFEQ           reduce using rule 41 (dup -> DUP .)
    SUPEQ           reduce using rule 41 (dup -> DUP .)
    SEMICOLON       reduce using rule 41 (dup -> DUP .)


state 32

    (42) comment -> COMMENT_LINE .

    NUMBER          reduce using rule 42 (comment -> COMMENT_LINE .)
    STRING          reduce using rule 42 (comment -> COMMENT_LINE .)
    STDOUT          reduce using rule 42 (comment -> COMMENT_LINE .)
    DOT             reduce using rule 42 (comment -> COMMENT_LINE .)
    SPACE           reduce using rule 42 (comment -> COMMENT_LINE .)
    DUP             reduce using rule 42 (comment -> COMMENT_LINE .)
    COMMENT_LINE    reduce using rule 42 (comment -> COMMENT_LINE .)
    COMMENT_BLOCK   reduce using rule 42 (comment -> COMMENT_LINE .)
    DROP            reduce using rule 42 (comment -> COMMENT_LINE .)
    SWAP            reduce using rule 42 (comment -> COMMENT_LINE .)
    ROT             reduce using rule 42 (comment -> COMMENT_LINE .)
    OVER            reduce using rule 42 (comment -> COMMENT_LINE .)
    CONCAT          reduce using rule 42 (comment -> COMMENT_LINE .)
    CR              reduce using rule 42 (comment -> COMMENT_LINE .)
    EMIT            reduce using rule 42 (comment -> COMMENT_LINE .)
    CHAR            reduce using rule 42 (comment -> COMMENT_LINE .)
    KEY             reduce using rule 42 (comment -> COMMENT_LINE .)
    SPACES          reduce using rule 42 (comment -> COMMENT_LINE .)
    2DUP            reduce using rule 42 (comment -> COMMENT_LINE .)
    FUNCTION        reduce using rule 42 (comment -> COMMENT_LINE .)
    FUNCTION_CALL   reduce using rule 42 (comment -> COMMENT_LINE .)
    COLON           reduce using rule 42 (comment -> COMMENT_LINE .)
    $end            reduce using rule 42 (comment -> COMMENT_LINE .)
    PLUS            reduce using rule 42 (comment -> COMMENT_LINE .)
    MINUS           reduce using rule 42 (comment -> COMMENT_LINE .)
    TIMES           reduce using rule 42 (comment -> COMMENT_LINE .)
    DIVIDE          reduce using rule 42 (comment -> COMMENT_LINE .)
    MOD             reduce using rule 42 (comment -> COMMENT_LINE .)
    NOT             reduce using rule 42 (comment -> COMMENT_LINE .)
    INF             reduce using rule 42 (comment -> COMMENT_LINE .)
    SUP             reduce using rule 42 (comment -> COMMENT_LINE .)
    INFEQ           reduce using rule 42 (comment -> COMMENT_LINE .)
    SUPEQ           reduce using rule 42 (comment -> COMMENT_LINE .)
    SEMICOLON       reduce using rule 42 (comment -> COMMENT_LINE .)


state 33

    (43) comment -> COMMENT_BLOCK .

    NUMBER          reduce using rule 43 (comment -> COMMENT_BLOCK .)
    STRING          reduce using rule 43 (comment -> COMMENT_BLOCK .)
    STDOUT          reduce using rule 43 (comment -> COMMENT_BLOCK .)
    DOT             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    SPACE           reduce using rule 43 (comment -> COMMENT_BLOCK .)
    DUP             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    COMMENT_LINE    reduce using rule 43 (comment -> COMMENT_BLOCK .)
    COMMENT_BLOCK   reduce using rule 43 (comment -> COMMENT_BLOCK .)
    DROP            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    SWAP            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    ROT             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    OVER            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    CONCAT          reduce using rule 43 (comment -> COMMENT_BLOCK .)
    CR              reduce using rule 43 (comment -> COMMENT_BLOCK .)
    EMIT            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    CHAR            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    KEY             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    SPACES          reduce using rule 43 (comment -> COMMENT_BLOCK .)
    2DUP            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    FUNCTION        reduce using rule 43 (comment -> COMMENT_BLOCK .)
    FUNCTION_CALL   reduce using rule 43 (comment -> COMMENT_BLOCK .)
    COLON           reduce using rule 43 (comment -> COMMENT_BLOCK .)
    $end            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    PLUS            reduce using rule 43 (comment -> COMMENT_BLOCK .)
    MINUS           reduce using rule 43 (comment -> COMMENT_BLOCK .)
    TIMES           reduce using rule 43 (comment -> COMMENT_BLOCK .)
    DIVIDE          reduce using rule 43 (comment -> COMMENT_BLOCK .)
    MOD             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    NOT             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    INF             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    SUP             reduce using rule 43 (comment -> COMMENT_BLOCK .)
    INFEQ           reduce using rule 43 (comment -> COMMENT_BLOCK .)
    SUPEQ           reduce using rule 43 (comment -> COMMENT_BLOCK .)
    SEMICOLON       reduce using rule 43 (comment -> COMMENT_BLOCK .)


state 34

    (44) drop -> DROP .

    NUMBER          reduce using rule 44 (drop -> DROP .)
    STRING          reduce using rule 44 (drop -> DROP .)
    STDOUT          reduce using rule 44 (drop -> DROP .)
    DOT             reduce using rule 44 (drop -> DROP .)
    SPACE           reduce using rule 44 (drop -> DROP .)
    DUP             reduce using rule 44 (drop -> DROP .)
    COMMENT_LINE    reduce using rule 44 (drop -> DROP .)
    COMMENT_BLOCK   reduce using rule 44 (drop -> DROP .)
    DROP            reduce using rule 44 (drop -> DROP .)
    SWAP            reduce using rule 44 (drop -> DROP .)
    ROT             reduce using rule 44 (drop -> DROP .)
    OVER            reduce using rule 44 (drop -> DROP .)
    CONCAT          reduce using rule 44 (drop -> DROP .)
    CR              reduce using rule 44 (drop -> DROP .)
    EMIT            reduce using rule 44 (drop -> DROP .)
    CHAR            reduce using rule 44 (drop -> DROP .)
    KEY             reduce using rule 44 (drop -> DROP .)
    SPACES          reduce using rule 44 (drop -> DROP .)
    2DUP            reduce using rule 44 (drop -> DROP .)
    FUNCTION        reduce using rule 44 (drop -> DROP .)
    FUNCTION_CALL   reduce using rule 44 (drop -> DROP .)
    COLON           reduce using rule 44 (drop -> DROP .)
    $end            reduce using rule 44 (drop -> DROP .)
    PLUS            reduce using rule 44 (drop -> DROP .)
    MINUS           reduce using rule 44 (drop -> DROP .)
    TIMES           reduce using rule 44 (drop -> DROP .)
    DIVIDE          reduce using rule 44 (drop -> DROP .)
    MOD             reduce using rule 44 (drop -> DROP .)
    NOT             reduce using rule 44 (drop -> DROP .)
    INF             reduce using rule 44 (drop -> DROP .)
    SUP             reduce using rule 44 (drop -> DROP .)
    INFEQ           reduce using rule 44 (drop -> DROP .)
    SUPEQ           reduce using rule 44 (drop -> DROP .)
    SEMICOLON       reduce using rule 44 (drop -> DROP .)


state 35

    (45) swap -> SWAP .

    NUMBER          reduce using rule 45 (swap -> SWAP .)
    STRING          reduce using rule 45 (swap -> SWAP .)
    STDOUT          reduce using rule 45 (swap -> SWAP .)
    DOT             reduce using rule 45 (swap -> SWAP .)
    SPACE           reduce using rule 45 (swap -> SWAP .)
    DUP             reduce using rule 45 (swap -> SWAP .)
    COMMENT_LINE    reduce using rule 45 (swap -> SWAP .)
    COMMENT_BLOCK   reduce using rule 45 (swap -> SWAP .)
    DROP            reduce using rule 45 (swap -> SWAP .)
    SWAP            reduce using rule 45 (swap -> SWAP .)
    ROT             reduce using rule 45 (swap -> SWAP .)
    OVER            reduce using rule 45 (swap -> SWAP .)
    CONCAT          reduce using rule 45 (swap -> SWAP .)
    CR              reduce using rule 45 (swap -> SWAP .)
    EMIT            reduce using rule 45 (swap -> SWAP .)
    CHAR            reduce using rule 45 (swap -> SWAP .)
    KEY             reduce using rule 45 (swap -> SWAP .)
    SPACES          reduce using rule 45 (swap -> SWAP .)
    2DUP            reduce using rule 45 (swap -> SWAP .)
    FUNCTION        reduce using rule 45 (swap -> SWAP .)
    FUNCTION_CALL   reduce using rule 45 (swap -> SWAP .)
    COLON           reduce using rule 45 (swap -> SWAP .)
    $end            reduce using rule 45 (swap -> SWAP .)
    PLUS            reduce using rule 45 (swap -> SWAP .)
    MINUS           reduce using rule 45 (swap -> SWAP .)
    TIMES           reduce using rule 45 (swap -> SWAP .)
    DIVIDE          reduce using rule 45 (swap -> SWAP .)
    MOD             reduce using rule 45 (swap -> SWAP .)
    NOT             reduce using rule 45 (swap -> SWAP .)
    INF             reduce using rule 45 (swap -> SWAP .)
    SUP             reduce using rule 45 (swap -> SWAP .)
    INFEQ           reduce using rule 45 (swap -> SWAP .)
    SUPEQ           reduce using rule 45 (swap -> SWAP .)
    SEMICOLON       reduce using rule 45 (swap -> SWAP .)


state 36

    (46) rot -> ROT .

    NUMBER          reduce using rule 46 (rot -> ROT .)
    STRING          reduce using rule 46 (rot -> ROT .)
    STDOUT          reduce using rule 46 (rot -> ROT .)
    DOT             reduce using rule 46 (rot -> ROT .)
    SPACE           reduce using rule 46 (rot -> ROT .)
    DUP             reduce using rule 46 (rot -> ROT .)
    COMMENT_LINE    reduce using rule 46 (rot -> ROT .)
    COMMENT_BLOCK   reduce using rule 46 (rot -> ROT .)
    DROP            reduce using rule 46 (rot -> ROT .)
    SWAP            reduce using rule 46 (rot -> ROT .)
    ROT             reduce using rule 46 (rot -> ROT .)
    OVER            reduce using rule 46 (rot -> ROT .)
    CONCAT          reduce using rule 46 (rot -> ROT .)
    CR              reduce using rule 46 (rot -> ROT .)
    EMIT            reduce using rule 46 (rot -> ROT .)
    CHAR            reduce using rule 46 (rot -> ROT .)
    KEY             reduce using rule 46 (rot -> ROT .)
    SPACES          reduce using rule 46 (rot -> ROT .)
    2DUP            reduce using rule 46 (rot -> ROT .)
    FUNCTION        reduce using rule 46 (rot -> ROT .)
    FUNCTION_CALL   reduce using rule 46 (rot -> ROT .)
    COLON           reduce using rule 46 (rot -> ROT .)
    $end            reduce using rule 46 (rot -> ROT .)
    PLUS            reduce using rule 46 (rot -> ROT .)
    MINUS           reduce using rule 46 (rot -> ROT .)
    TIMES           reduce using rule 46 (rot -> ROT .)
    DIVIDE          reduce using rule 46 (rot -> ROT .)
    MOD             reduce using rule 46 (rot -> ROT .)
    NOT             reduce using rule 46 (rot -> ROT .)
    INF             reduce using rule 46 (rot -> ROT .)
    SUP             reduce using rule 46 (rot -> ROT .)
    INFEQ           reduce using rule 46 (rot -> ROT .)
    SUPEQ           reduce using rule 46 (rot -> ROT .)
    SEMICOLON       reduce using rule 46 (rot -> ROT .)


state 37

    (47) over -> OVER .

    NUMBER          reduce using rule 47 (over -> OVER .)
    STRING          reduce using rule 47 (over -> OVER .)
    STDOUT          reduce using rule 47 (over -> OVER .)
    DOT             reduce using rule 47 (over -> OVER .)
    SPACE           reduce using rule 47 (over -> OVER .)
    DUP             reduce using rule 47 (over -> OVER .)
    COMMENT_LINE    reduce using rule 47 (over -> OVER .)
    COMMENT_BLOCK   reduce using rule 47 (over -> OVER .)
    DROP            reduce using rule 47 (over -> OVER .)
    SWAP            reduce using rule 47 (over -> OVER .)
    ROT             reduce using rule 47 (over -> OVER .)
    OVER            reduce using rule 47 (over -> OVER .)
    CONCAT          reduce using rule 47 (over -> OVER .)
    CR              reduce using rule 47 (over -> OVER .)
    EMIT            reduce using rule 47 (over -> OVER .)
    CHAR            reduce using rule 47 (over -> OVER .)
    KEY             reduce using rule 47 (over -> OVER .)
    SPACES          reduce using rule 47 (over -> OVER .)
    2DUP            reduce using rule 47 (over -> OVER .)
    FUNCTION        reduce using rule 47 (over -> OVER .)
    FUNCTION_CALL   reduce using rule 47 (over -> OVER .)
    COLON           reduce using rule 47 (over -> OVER .)
    $end            reduce using rule 47 (over -> OVER .)
    PLUS            reduce using rule 47 (over -> OVER .)
    MINUS           reduce using rule 47 (over -> OVER .)
    TIMES           reduce using rule 47 (over -> OVER .)
    DIVIDE          reduce using rule 47 (over -> OVER .)
    MOD             reduce using rule 47 (over -> OVER .)
    NOT             reduce using rule 47 (over -> OVER .)
    INF             reduce using rule 47 (over -> OVER .)
    SUP             reduce using rule 47 (over -> OVER .)
    INFEQ           reduce using rule 47 (over -> OVER .)
    SUPEQ           reduce using rule 47 (over -> OVER .)
    SEMICOLON       reduce using rule 47 (over -> OVER .)


state 38

    (48) concat -> CONCAT .

    NUMBER          reduce using rule 48 (concat -> CONCAT .)
    STRING          reduce using rule 48 (concat -> CONCAT .)
    STDOUT          reduce using rule 48 (concat -> CONCAT .)
    DOT             reduce using rule 48 (concat -> CONCAT .)
    SPACE           reduce using rule 48 (concat -> CONCAT .)
    DUP             reduce using rule 48 (concat -> CONCAT .)
    COMMENT_LINE    reduce using rule 48 (concat -> CONCAT .)
    COMMENT_BLOCK   reduce using rule 48 (concat -> CONCAT .)
    DROP            reduce using rule 48 (concat -> CONCAT .)
    SWAP            reduce using rule 48 (concat -> CONCAT .)
    ROT             reduce using rule 48 (concat -> CONCAT .)
    OVER            reduce using rule 48 (concat -> CONCAT .)
    CONCAT          reduce using rule 48 (concat -> CONCAT .)
    CR              reduce using rule 48 (concat -> CONCAT .)
    EMIT            reduce using rule 48 (concat -> CONCAT .)
    CHAR            reduce using rule 48 (concat -> CONCAT .)
    KEY             reduce using rule 48 (concat -> CONCAT .)
    SPACES          reduce using rule 48 (concat -> CONCAT .)
    2DUP            reduce using rule 48 (concat -> CONCAT .)
    FUNCTION        reduce using rule 48 (concat -> CONCAT .)
    FUNCTION_CALL   reduce using rule 48 (concat -> CONCAT .)
    COLON           reduce using rule 48 (concat -> CONCAT .)
    $end            reduce using rule 48 (concat -> CONCAT .)
    PLUS            reduce using rule 48 (concat -> CONCAT .)
    MINUS           reduce using rule 48 (concat -> CONCAT .)
    TIMES           reduce using rule 48 (concat -> CONCAT .)
    DIVIDE          reduce using rule 48 (concat -> CONCAT .)
    MOD             reduce using rule 48 (concat -> CONCAT .)
    NOT             reduce using rule 48 (concat -> CONCAT .)
    INF             reduce using rule 48 (concat -> CONCAT .)
    SUP             reduce using rule 48 (concat -> CONCAT .)
    INFEQ           reduce using rule 48 (concat -> CONCAT .)
    SUPEQ           reduce using rule 48 (concat -> CONCAT .)
    SEMICOLON       reduce using rule 48 (concat -> CONCAT .)


state 39

    (49) cr -> CR .

    NUMBER          reduce using rule 49 (cr -> CR .)
    STRING          reduce using rule 49 (cr -> CR .)
    STDOUT          reduce using rule 49 (cr -> CR .)
    DOT             reduce using rule 49 (cr -> CR .)
    SPACE           reduce using rule 49 (cr -> CR .)
    DUP             reduce using rule 49 (cr -> CR .)
    COMMENT_LINE    reduce using rule 49 (cr -> CR .)
    COMMENT_BLOCK   reduce using rule 49 (cr -> CR .)
    DROP            reduce using rule 49 (cr -> CR .)
    SWAP            reduce using rule 49 (cr -> CR .)
    ROT             reduce using rule 49 (cr -> CR .)
    OVER            reduce using rule 49 (cr -> CR .)
    CONCAT          reduce using rule 49 (cr -> CR .)
    CR              reduce using rule 49 (cr -> CR .)
    EMIT            reduce using rule 49 (cr -> CR .)
    CHAR            reduce using rule 49 (cr -> CR .)
    KEY             reduce using rule 49 (cr -> CR .)
    SPACES          reduce using rule 49 (cr -> CR .)
    2DUP            reduce using rule 49 (cr -> CR .)
    FUNCTION        reduce using rule 49 (cr -> CR .)
    FUNCTION_CALL   reduce using rule 49 (cr -> CR .)
    COLON           reduce using rule 49 (cr -> CR .)
    $end            reduce using rule 49 (cr -> CR .)
    PLUS            reduce using rule 49 (cr -> CR .)
    MINUS           reduce using rule 49 (cr -> CR .)
    TIMES           reduce using rule 49 (cr -> CR .)
    DIVIDE          reduce using rule 49 (cr -> CR .)
    MOD             reduce using rule 49 (cr -> CR .)
    NOT             reduce using rule 49 (cr -> CR .)
    INF             reduce using rule 49 (cr -> CR .)
    SUP             reduce using rule 49 (cr -> CR .)
    INFEQ           reduce using rule 49 (cr -> CR .)
    SUPEQ           reduce using rule 49 (cr -> CR .)
    SEMICOLON       reduce using rule 49 (cr -> CR .)


state 40

    (50) emit -> EMIT .

    NUMBER          reduce using rule 50 (emit -> EMIT .)
    STRING          reduce using rule 50 (emit -> EMIT .)
    STDOUT          reduce using rule 50 (emit -> EMIT .)
    DOT             reduce using rule 50 (emit -> EMIT .)
    SPACE           reduce using rule 50 (emit -> EMIT .)
    DUP             reduce using rule 50 (emit -> EMIT .)
    COMMENT_LINE    reduce using rule 50 (emit -> EMIT .)
    COMMENT_BLOCK   reduce using rule 50 (emit -> EMIT .)
    DROP            reduce using rule 50 (emit -> EMIT .)
    SWAP            reduce using rule 50 (emit -> EMIT .)
    ROT             reduce using rule 50 (emit -> EMIT .)
    OVER            reduce using rule 50 (emit -> EMIT .)
    CONCAT          reduce using rule 50 (emit -> EMIT .)
    CR              reduce using rule 50 (emit -> EMIT .)
    EMIT            reduce using rule 50 (emit -> EMIT .)
    CHAR            reduce using rule 50 (emit -> EMIT .)
    KEY             reduce using rule 50 (emit -> EMIT .)
    SPACES          reduce using rule 50 (emit -> EMIT .)
    2DUP            reduce using rule 50 (emit -> EMIT .)
    FUNCTION        reduce using rule 50 (emit -> EMIT .)
    FUNCTION_CALL   reduce using rule 50 (emit -> EMIT .)
    COLON           reduce using rule 50 (emit -> EMIT .)
    $end            reduce using rule 50 (emit -> EMIT .)
    PLUS            reduce using rule 50 (emit -> EMIT .)
    MINUS           reduce using rule 50 (emit -> EMIT .)
    TIMES           reduce using rule 50 (emit -> EMIT .)
    DIVIDE          reduce using rule 50 (emit -> EMIT .)
    MOD             reduce using rule 50 (emit -> EMIT .)
    NOT             reduce using rule 50 (emit -> EMIT .)
    INF             reduce using rule 50 (emit -> EMIT .)
    SUP             reduce using rule 50 (emit -> EMIT .)
    INFEQ           reduce using rule 50 (emit -> EMIT .)
    SUPEQ           reduce using rule 50 (emit -> EMIT .)
    SEMICOLON       reduce using rule 50 (emit -> EMIT .)


state 41

    (51) char -> CHAR .

    NUMBER          reduce using rule 51 (char -> CHAR .)
    STRING          reduce using rule 51 (char -> CHAR .)
    STDOUT          reduce using rule 51 (char -> CHAR .)
    DOT             reduce using rule 51 (char -> CHAR .)
    SPACE           reduce using rule 51 (char -> CHAR .)
    DUP             reduce using rule 51 (char -> CHAR .)
    COMMENT_LINE    reduce using rule 51 (char -> CHAR .)
    COMMENT_BLOCK   reduce using rule 51 (char -> CHAR .)
    DROP            reduce using rule 51 (char -> CHAR .)
    SWAP            reduce using rule 51 (char -> CHAR .)
    ROT             reduce using rule 51 (char -> CHAR .)
    OVER            reduce using rule 51 (char -> CHAR .)
    CONCAT          reduce using rule 51 (char -> CHAR .)
    CR              reduce using rule 51 (char -> CHAR .)
    EMIT            reduce using rule 51 (char -> CHAR .)
    CHAR            reduce using rule 51 (char -> CHAR .)
    KEY             reduce using rule 51 (char -> CHAR .)
    SPACES          reduce using rule 51 (char -> CHAR .)
    2DUP            reduce using rule 51 (char -> CHAR .)
    FUNCTION        reduce using rule 51 (char -> CHAR .)
    FUNCTION_CALL   reduce using rule 51 (char -> CHAR .)
    COLON           reduce using rule 51 (char -> CHAR .)
    $end            reduce using rule 51 (char -> CHAR .)
    PLUS            reduce using rule 51 (char -> CHAR .)
    MINUS           reduce using rule 51 (char -> CHAR .)
    TIMES           reduce using rule 51 (char -> CHAR .)
    DIVIDE          reduce using rule 51 (char -> CHAR .)
    MOD             reduce using rule 51 (char -> CHAR .)
    NOT             reduce using rule 51 (char -> CHAR .)
    INF             reduce using rule 51 (char -> CHAR .)
    SUP             reduce using rule 51 (char -> CHAR .)
    INFEQ           reduce using rule 51 (char -> CHAR .)
    SUPEQ           reduce using rule 51 (char -> CHAR .)
    SEMICOLON       reduce using rule 51 (char -> CHAR .)


state 42

    (52) key -> KEY .

    NUMBER          reduce using rule 52 (key -> KEY .)
    STRING          reduce using rule 52 (key -> KEY .)
    STDOUT          reduce using rule 52 (key -> KEY .)
    DOT             reduce using rule 52 (key -> KEY .)
    SPACE           reduce using rule 52 (key -> KEY .)
    DUP             reduce using rule 52 (key -> KEY .)
    COMMENT_LINE    reduce using rule 52 (key -> KEY .)
    COMMENT_BLOCK   reduce using rule 52 (key -> KEY .)
    DROP            reduce using rule 52 (key -> KEY .)
    SWAP            reduce using rule 52 (key -> KEY .)
    ROT             reduce using rule 52 (key -> KEY .)
    OVER            reduce using rule 52 (key -> KEY .)
    CONCAT          reduce using rule 52 (key -> KEY .)
    CR              reduce using rule 52 (key -> KEY .)
    EMIT            reduce using rule 52 (key -> KEY .)
    CHAR            reduce using rule 52 (key -> KEY .)
    KEY             reduce using rule 52 (key -> KEY .)
    SPACES          reduce using rule 52 (key -> KEY .)
    2DUP            reduce using rule 52 (key -> KEY .)
    FUNCTION        reduce using rule 52 (key -> KEY .)
    FUNCTION_CALL   reduce using rule 52 (key -> KEY .)
    COLON           reduce using rule 52 (key -> KEY .)
    $end            reduce using rule 52 (key -> KEY .)
    PLUS            reduce using rule 52 (key -> KEY .)
    MINUS           reduce using rule 52 (key -> KEY .)
    TIMES           reduce using rule 52 (key -> KEY .)
    DIVIDE          reduce using rule 52 (key -> KEY .)
    MOD             reduce using rule 52 (key -> KEY .)
    NOT             reduce using rule 52 (key -> KEY .)
    INF             reduce using rule 52 (key -> KEY .)
    SUP             reduce using rule 52 (key -> KEY .)
    INFEQ           reduce using rule 52 (key -> KEY .)
    SUPEQ           reduce using rule 52 (key -> KEY .)
    SEMICOLON       reduce using rule 52 (key -> KEY .)


state 43

    (53) spaces -> SPACES .

    NUMBER          reduce using rule 53 (spaces -> SPACES .)
    STRING          reduce using rule 53 (spaces -> SPACES .)
    STDOUT          reduce using rule 53 (spaces -> SPACES .)
    DOT             reduce using rule 53 (spaces -> SPACES .)
    SPACE           reduce using rule 53 (spaces -> SPACES .)
    DUP             reduce using rule 53 (spaces -> SPACES .)
    COMMENT_LINE    reduce using rule 53 (spaces -> SPACES .)
    COMMENT_BLOCK   reduce using rule 53 (spaces -> SPACES .)
    DROP            reduce using rule 53 (spaces -> SPACES .)
    SWAP            reduce using rule 53 (spaces -> SPACES .)
    ROT             reduce using rule 53 (spaces -> SPACES .)
    OVER            reduce using rule 53 (spaces -> SPACES .)
    CONCAT          reduce using rule 53 (spaces -> SPACES .)
    CR              reduce using rule 53 (spaces -> SPACES .)
    EMIT            reduce using rule 53 (spaces -> SPACES .)
    CHAR            reduce using rule 53 (spaces -> SPACES .)
    KEY             reduce using rule 53 (spaces -> SPACES .)
    SPACES          reduce using rule 53 (spaces -> SPACES .)
    2DUP            reduce using rule 53 (spaces -> SPACES .)
    FUNCTION        reduce using rule 53 (spaces -> SPACES .)
    FUNCTION_CALL   reduce using rule 53 (spaces -> SPACES .)
    COLON           reduce using rule 53 (spaces -> SPACES .)
    $end            reduce using rule 53 (spaces -> SPACES .)
    PLUS            reduce using rule 53 (spaces -> SPACES .)
    MINUS           reduce using rule 53 (spaces -> SPACES .)
    TIMES           reduce using rule 53 (spaces -> SPACES .)
    DIVIDE          reduce using rule 53 (spaces -> SPACES .)
    MOD             reduce using rule 53 (spaces -> SPACES .)
    NOT             reduce using rule 53 (spaces -> SPACES .)
    INF             reduce using rule 53 (spaces -> SPACES .)
    SUP             reduce using rule 53 (spaces -> SPACES .)
    INFEQ           reduce using rule 53 (spaces -> SPACES .)
    SUPEQ           reduce using rule 53 (spaces -> SPACES .)
    SEMICOLON       reduce using rule 53 (spaces -> SPACES .)


state 44

    (54) 2dup -> 2DUP .

    NUMBER          reduce using rule 54 (2dup -> 2DUP .)
    STRING          reduce using rule 54 (2dup -> 2DUP .)
    STDOUT          reduce using rule 54 (2dup -> 2DUP .)
    DOT             reduce using rule 54 (2dup -> 2DUP .)
    SPACE           reduce using rule 54 (2dup -> 2DUP .)
    DUP             reduce using rule 54 (2dup -> 2DUP .)
    COMMENT_LINE    reduce using rule 54 (2dup -> 2DUP .)
    COMMENT_BLOCK   reduce using rule 54 (2dup -> 2DUP .)
    DROP            reduce using rule 54 (2dup -> 2DUP .)
    SWAP            reduce using rule 54 (2dup -> 2DUP .)
    ROT             reduce using rule 54 (2dup -> 2DUP .)
    OVER            reduce using rule 54 (2dup -> 2DUP .)
    CONCAT          reduce using rule 54 (2dup -> 2DUP .)
    CR              reduce using rule 54 (2dup -> 2DUP .)
    EMIT            reduce using rule 54 (2dup -> 2DUP .)
    CHAR            reduce using rule 54 (2dup -> 2DUP .)
    KEY             reduce using rule 54 (2dup -> 2DUP .)
    SPACES          reduce using rule 54 (2dup -> 2DUP .)
    2DUP            reduce using rule 54 (2dup -> 2DUP .)
    FUNCTION        reduce using rule 54 (2dup -> 2DUP .)
    FUNCTION_CALL   reduce using rule 54 (2dup -> 2DUP .)
    COLON           reduce using rule 54 (2dup -> 2DUP .)
    $end            reduce using rule 54 (2dup -> 2DUP .)
    PLUS            reduce using rule 54 (2dup -> 2DUP .)
    MINUS           reduce using rule 54 (2dup -> 2DUP .)
    TIMES           reduce using rule 54 (2dup -> 2DUP .)
    DIVIDE          reduce using rule 54 (2dup -> 2DUP .)
    MOD             reduce using rule 54 (2dup -> 2DUP .)
    NOT             reduce using rule 54 (2dup -> 2DUP .)
    INF             reduce using rule 54 (2dup -> 2DUP .)
    SUP             reduce using rule 54 (2dup -> 2DUP .)
    INFEQ           reduce using rule 54 (2dup -> 2DUP .)
    SUPEQ           reduce using rule 54 (2dup -> 2DUP .)
    SEMICOLON       reduce using rule 54 (2dup -> 2DUP .)


state 45

    (55) function -> FUNCTION .

    NUMBER          reduce using rule 55 (function -> FUNCTION .)
    STRING          reduce using rule 55 (function -> FUNCTION .)
    STDOUT          reduce using rule 55 (function -> FUNCTION .)
    DOT             reduce using rule 55 (function -> FUNCTION .)
    SPACE           reduce using rule 55 (function -> FUNCTION .)
    DUP             reduce using rule 55 (function -> FUNCTION .)
    COMMENT_LINE    reduce using rule 55 (function -> FUNCTION .)
    COMMENT_BLOCK   reduce using rule 55 (function -> FUNCTION .)
    DROP            reduce using rule 55 (function -> FUNCTION .)
    SWAP            reduce using rule 55 (function -> FUNCTION .)
    ROT             reduce using rule 55 (function -> FUNCTION .)
    OVER            reduce using rule 55 (function -> FUNCTION .)
    CONCAT          reduce using rule 55 (function -> FUNCTION .)
    CR              reduce using rule 55 (function -> FUNCTION .)
    EMIT            reduce using rule 55 (function -> FUNCTION .)
    CHAR            reduce using rule 55 (function -> FUNCTION .)
    KEY             reduce using rule 55 (function -> FUNCTION .)
    SPACES          reduce using rule 55 (function -> FUNCTION .)
    2DUP            reduce using rule 55 (function -> FUNCTION .)
    FUNCTION        reduce using rule 55 (function -> FUNCTION .)
    FUNCTION_CALL   reduce using rule 55 (function -> FUNCTION .)
    COLON           reduce using rule 55 (function -> FUNCTION .)
    $end            reduce using rule 55 (function -> FUNCTION .)
    PLUS            reduce using rule 55 (function -> FUNCTION .)
    MINUS           reduce using rule 55 (function -> FUNCTION .)
    TIMES           reduce using rule 55 (function -> FUNCTION .)
    DIVIDE          reduce using rule 55 (function -> FUNCTION .)
    MOD             reduce using rule 55 (function -> FUNCTION .)
    NOT             reduce using rule 55 (function -> FUNCTION .)
    INF             reduce using rule 55 (function -> FUNCTION .)
    SUP             reduce using rule 55 (function -> FUNCTION .)
    INFEQ           reduce using rule 55 (function -> FUNCTION .)
    SUPEQ           reduce using rule 55 (function -> FUNCTION .)
    SEMICOLON       reduce using rule 55 (function -> FUNCTION .)


state 46

    (56) function -> FUNCTION_CALL .

    NUMBER          reduce using rule 56 (function -> FUNCTION_CALL .)
    STRING          reduce using rule 56 (function -> FUNCTION_CALL .)
    STDOUT          reduce using rule 56 (function -> FUNCTION_CALL .)
    DOT             reduce using rule 56 (function -> FUNCTION_CALL .)
    SPACE           reduce using rule 56 (function -> FUNCTION_CALL .)
    DUP             reduce using rule 56 (function -> FUNCTION_CALL .)
    COMMENT_LINE    reduce using rule 56 (function -> FUNCTION_CALL .)
    COMMENT_BLOCK   reduce using rule 56 (function -> FUNCTION_CALL .)
    DROP            reduce using rule 56 (function -> FUNCTION_CALL .)
    SWAP            reduce using rule 56 (function -> FUNCTION_CALL .)
    ROT             reduce using rule 56 (function -> FUNCTION_CALL .)
    OVER            reduce using rule 56 (function -> FUNCTION_CALL .)
    CONCAT          reduce using rule 56 (function -> FUNCTION_CALL .)
    CR              reduce using rule 56 (function -> FUNCTION_CALL .)
    EMIT            reduce using rule 56 (function -> FUNCTION_CALL .)
    CHAR            reduce using rule 56 (function -> FUNCTION_CALL .)
    KEY             reduce using rule 56 (function -> FUNCTION_CALL .)
    SPACES          reduce using rule 56 (function -> FUNCTION_CALL .)
    2DUP            reduce using rule 56 (function -> FUNCTION_CALL .)
    FUNCTION        reduce using rule 56 (function -> FUNCTION_CALL .)
    FUNCTION_CALL   reduce using rule 56 (function -> FUNCTION_CALL .)
    COLON           reduce using rule 56 (function -> FUNCTION_CALL .)
    $end            reduce using rule 56 (function -> FUNCTION_CALL .)
    PLUS            reduce using rule 56 (function -> FUNCTION_CALL .)
    MINUS           reduce using rule 56 (function -> FUNCTION_CALL .)
    TIMES           reduce using rule 56 (function -> FUNCTION_CALL .)
    DIVIDE          reduce using rule 56 (function -> FUNCTION_CALL .)
    MOD             reduce using rule 56 (function -> FUNCTION_CALL .)
    NOT             reduce using rule 56 (function -> FUNCTION_CALL .)
    INF             reduce using rule 56 (function -> FUNCTION_CALL .)
    SUP             reduce using rule 56 (function -> FUNCTION_CALL .)
    INFEQ           reduce using rule 56 (function -> FUNCTION_CALL .)
    SUPEQ           reduce using rule 56 (function -> FUNCTION_CALL .)
    SEMICOLON       reduce using rule 56 (function -> FUNCTION_CALL .)


state 47

    (57) func_criadas -> COLON . FUNCTION comandos SEMICOLON function

    FUNCTION        shift and go to state 50


state 48

    (3) comandos -> comandos comando .
    (8) exp_aritmeticas -> comando . comando PLUS
    (9) exp_aritmeticas -> comando . comando MINUS
    (10) exp_aritmeticas -> comando . comando TIMES
    (11) exp_aritmeticas -> comando . comando DIVIDE
    (12) exp_aritmeticas -> comando . comando MOD
    (13) exp_relacionais -> comando . comando NOT
    (14) exp_relacionais -> comando . comando INF
    (15) exp_relacionais -> comando . comando SUP
    (16) exp_relacionais -> comando . comando INFEQ
    (17) exp_relacionais -> comando . comando SUPEQ
    (4) comando -> . exp_aritmeticas
    (5) comando -> . exp_relacionais
    (6) comando -> . functions
    (7) comando -> . values
    (8) exp_aritmeticas -> . comando comando PLUS
    (9) exp_aritmeticas -> . comando comando MINUS
    (10) exp_aritmeticas -> . comando comando TIMES
    (11) exp_aritmeticas -> . comando comando DIVIDE
    (12) exp_aritmeticas -> . comando comando MOD
    (13) exp_relacionais -> . comando comando NOT
    (14) exp_relacionais -> . comando comando INF
    (15) exp_relacionais -> . comando comando SUP
    (16) exp_relacionais -> . comando comando INFEQ
    (17) exp_relacionais -> . comando comando SUPEQ
    (20) functions -> . stdout
    (21) functions -> . dot
    (22) functions -> . space
    (23) functions -> . dup
    (24) functions -> . comment
    (25) functions -> . drop
    (26) functions -> . swap
    (27) functions -> . rot
    (28) functions -> . over
    (29) functions -> . concat
    (30) functions -> . cr
    (31) functions -> . emit
    (32) functions -> . char
    (33) functions -> . key
    (34) functions -> . spaces
    (35) functions -> . 2dup
    (36) functions -> . function
    (37) functions -> . func_criadas
    (18) values -> . NUMBER
    (19) values -> . STRING
    (38) stdout -> . STDOUT
    (39) dot -> . DOT
    (40) space -> . SPACE
    (41) dup -> . DUP
    (42) comment -> . COMMENT_LINE
    (43) comment -> . COMMENT_BLOCK
    (44) drop -> . DROP
    (45) swap -> . SWAP
    (46) rot -> . ROT
    (47) over -> . OVER
    (48) concat -> . CONCAT
    (49) cr -> . CR
    (50) emit -> . EMIT
    (51) char -> . CHAR
    (52) key -> . KEY
    (53) spaces -> . SPACES
    (54) 2dup -> . 2DUP
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL
    (57) func_criadas -> . COLON FUNCTION comandos SEMICOLON function

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for STDOUT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for SPACE resolved as shift
  ! shift/reduce conflict for DUP resolved as shift
  ! shift/reduce conflict for COMMENT_LINE resolved as shift
  ! shift/reduce conflict for COMMENT_BLOCK resolved as shift
  ! shift/reduce conflict for DROP resolved as shift
  ! shift/reduce conflict for SWAP resolved as shift
  ! shift/reduce conflict for ROT resolved as shift
  ! shift/reduce conflict for OVER resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
  ! shift/reduce conflict for CR resolved as shift
  ! shift/reduce conflict for EMIT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for KEY resolved as shift
  ! shift/reduce conflict for SPACES resolved as shift
  ! shift/reduce conflict for 2DUP resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for FUNCTION_CALL resolved as shift
  ! shift/reduce conflict for COLON resolved as shift
    $end            reduce using rule 3 (comandos -> comandos comando .)
    SEMICOLON       reduce using rule 3 (comandos -> comandos comando .)
    NUMBER          shift and go to state 26
    STRING          shift and go to state 27
    STDOUT          shift and go to state 28
    DOT             shift and go to state 29
    SPACE           shift and go to state 30
    DUP             shift and go to state 31
    COMMENT_LINE    shift and go to state 32
    COMMENT_BLOCK   shift and go to state 33
    DROP            shift and go to state 34
    SWAP            shift and go to state 35
    ROT             shift and go to state 36
    OVER            shift and go to state 37
    CONCAT          shift and go to state 38
    CR              shift and go to state 39
    EMIT            shift and go to state 40
    CHAR            shift and go to state 41
    KEY             shift and go to state 42
    SPACES          shift and go to state 43
    2DUP            shift and go to state 44
    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46
    COLON           shift and go to state 47

  ! NUMBER          [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! STRING          [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! STDOUT          [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! DOT             [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! SPACE           [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! DUP             [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! COMMENT_LINE    [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! COMMENT_BLOCK   [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! DROP            [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! SWAP            [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! ROT             [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! OVER            [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! CONCAT          [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! CR              [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! EMIT            [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! CHAR            [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! KEY             [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! SPACES          [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! 2DUP            [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! FUNCTION        [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! FUNCTION_CALL   [ reduce using rule 3 (comandos -> comandos comando .) ]
  ! COLON           [ reduce using rule 3 (comandos -> comandos comando .) ]

    comando                        shift and go to state 49
    exp_aritmeticas                shift and go to state 4
    exp_relacionais                shift and go to state 5
    functions                      shift and go to state 6
    values                         shift and go to state 7
    stdout                         shift and go to state 8
    dot                            shift and go to state 9
    space                          shift and go to state 10
    dup                            shift and go to state 11
    comment                        shift and go to state 12
    drop                           shift and go to state 13
    swap                           shift and go to state 14
    rot                            shift and go to state 15
    over                           shift and go to state 16
    concat                         shift and go to state 17
    cr                             shift and go to state 18
    emit                           shift and go to state 19
    char                           shift and go to state 20
    key                            shift and go to state 21
    spaces                         shift and go to state 22
    2dup                           shift and go to state 23
    function                       shift and go to state 24
    func_criadas                   shift and go to state 25

state 49

    (8) exp_aritmeticas -> comando comando . PLUS
    (9) exp_aritmeticas -> comando comando . MINUS
    (10) exp_aritmeticas -> comando comando . TIMES
    (11) exp_aritmeticas -> comando comando . DIVIDE
    (12) exp_aritmeticas -> comando comando . MOD
    (13) exp_relacionais -> comando comando . NOT
    (14) exp_relacionais -> comando comando . INF
    (15) exp_relacionais -> comando comando . SUP
    (16) exp_relacionais -> comando comando . INFEQ
    (17) exp_relacionais -> comando comando . SUPEQ
    (8) exp_aritmeticas -> comando . comando PLUS
    (9) exp_aritmeticas -> comando . comando MINUS
    (10) exp_aritmeticas -> comando . comando TIMES
    (11) exp_aritmeticas -> comando . comando DIVIDE
    (12) exp_aritmeticas -> comando . comando MOD
    (13) exp_relacionais -> comando . comando NOT
    (14) exp_relacionais -> comando . comando INF
    (15) exp_relacionais -> comando . comando SUP
    (16) exp_relacionais -> comando . comando INFEQ
    (17) exp_relacionais -> comando . comando SUPEQ
    (4) comando -> . exp_aritmeticas
    (5) comando -> . exp_relacionais
    (6) comando -> . functions
    (7) comando -> . values
    (8) exp_aritmeticas -> . comando comando PLUS
    (9) exp_aritmeticas -> . comando comando MINUS
    (10) exp_aritmeticas -> . comando comando TIMES
    (11) exp_aritmeticas -> . comando comando DIVIDE
    (12) exp_aritmeticas -> . comando comando MOD
    (13) exp_relacionais -> . comando comando NOT
    (14) exp_relacionais -> . comando comando INF
    (15) exp_relacionais -> . comando comando SUP
    (16) exp_relacionais -> . comando comando INFEQ
    (17) exp_relacionais -> . comando comando SUPEQ
    (20) functions -> . stdout
    (21) functions -> . dot
    (22) functions -> . space
    (23) functions -> . dup
    (24) functions -> . comment
    (25) functions -> . drop
    (26) functions -> . swap
    (27) functions -> . rot
    (28) functions -> . over
    (29) functions -> . concat
    (30) functions -> . cr
    (31) functions -> . emit
    (32) functions -> . char
    (33) functions -> . key
    (34) functions -> . spaces
    (35) functions -> . 2dup
    (36) functions -> . function
    (37) functions -> . func_criadas
    (18) values -> . NUMBER
    (19) values -> . STRING
    (38) stdout -> . STDOUT
    (39) dot -> . DOT
    (40) space -> . SPACE
    (41) dup -> . DUP
    (42) comment -> . COMMENT_LINE
    (43) comment -> . COMMENT_BLOCK
    (44) drop -> . DROP
    (45) swap -> . SWAP
    (46) rot -> . ROT
    (47) over -> . OVER
    (48) concat -> . CONCAT
    (49) cr -> . CR
    (50) emit -> . EMIT
    (51) char -> . CHAR
    (52) key -> . KEY
    (53) spaces -> . SPACES
    (54) 2dup -> . 2DUP
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL
    (57) func_criadas -> . COLON FUNCTION comandos SEMICOLON function

    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54
    MOD             shift and go to state 55
    NOT             shift and go to state 56
    INF             shift and go to state 57
    SUP             shift and go to state 58
    INFEQ           shift and go to state 59
    SUPEQ           shift and go to state 60
    NUMBER          shift and go to state 26
    STRING          shift and go to state 27
    STDOUT          shift and go to state 28
    DOT             shift and go to state 29
    SPACE           shift and go to state 30
    DUP             shift and go to state 31
    COMMENT_LINE    shift and go to state 32
    COMMENT_BLOCK   shift and go to state 33
    DROP            shift and go to state 34
    SWAP            shift and go to state 35
    ROT             shift and go to state 36
    OVER            shift and go to state 37
    CONCAT          shift and go to state 38
    CR              shift and go to state 39
    EMIT            shift and go to state 40
    CHAR            shift and go to state 41
    KEY             shift and go to state 42
    SPACES          shift and go to state 43
    2DUP            shift and go to state 44
    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46
    COLON           shift and go to state 47

    comando                        shift and go to state 49
    exp_aritmeticas                shift and go to state 4
    exp_relacionais                shift and go to state 5
    functions                      shift and go to state 6
    values                         shift and go to state 7
    stdout                         shift and go to state 8
    dot                            shift and go to state 9
    space                          shift and go to state 10
    dup                            shift and go to state 11
    comment                        shift and go to state 12
    drop                           shift and go to state 13
    swap                           shift and go to state 14
    rot                            shift and go to state 15
    over                           shift and go to state 16
    concat                         shift and go to state 17
    cr                             shift and go to state 18
    emit                           shift and go to state 19
    char                           shift and go to state 20
    key                            shift and go to state 21
    spaces                         shift and go to state 22
    2dup                           shift and go to state 23
    function                       shift and go to state 24
    func_criadas                   shift and go to state 25

state 50

    (57) func_criadas -> COLON FUNCTION . comandos SEMICOLON function
    (2) comandos -> . comando
    (3) comandos -> . comandos comando
    (4) comando -> . exp_aritmeticas
    (5) comando -> . exp_relacionais
    (6) comando -> . functions
    (7) comando -> . values
    (8) exp_aritmeticas -> . comando comando PLUS
    (9) exp_aritmeticas -> . comando comando MINUS
    (10) exp_aritmeticas -> . comando comando TIMES
    (11) exp_aritmeticas -> . comando comando DIVIDE
    (12) exp_aritmeticas -> . comando comando MOD
    (13) exp_relacionais -> . comando comando NOT
    (14) exp_relacionais -> . comando comando INF
    (15) exp_relacionais -> . comando comando SUP
    (16) exp_relacionais -> . comando comando INFEQ
    (17) exp_relacionais -> . comando comando SUPEQ
    (20) functions -> . stdout
    (21) functions -> . dot
    (22) functions -> . space
    (23) functions -> . dup
    (24) functions -> . comment
    (25) functions -> . drop
    (26) functions -> . swap
    (27) functions -> . rot
    (28) functions -> . over
    (29) functions -> . concat
    (30) functions -> . cr
    (31) functions -> . emit
    (32) functions -> . char
    (33) functions -> . key
    (34) functions -> . spaces
    (35) functions -> . 2dup
    (36) functions -> . function
    (37) functions -> . func_criadas
    (18) values -> . NUMBER
    (19) values -> . STRING
    (38) stdout -> . STDOUT
    (39) dot -> . DOT
    (40) space -> . SPACE
    (41) dup -> . DUP
    (42) comment -> . COMMENT_LINE
    (43) comment -> . COMMENT_BLOCK
    (44) drop -> . DROP
    (45) swap -> . SWAP
    (46) rot -> . ROT
    (47) over -> . OVER
    (48) concat -> . CONCAT
    (49) cr -> . CR
    (50) emit -> . EMIT
    (51) char -> . CHAR
    (52) key -> . KEY
    (53) spaces -> . SPACES
    (54) 2dup -> . 2DUP
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL
    (57) func_criadas -> . COLON FUNCTION comandos SEMICOLON function

    NUMBER          shift and go to state 26
    STRING          shift and go to state 27
    STDOUT          shift and go to state 28
    DOT             shift and go to state 29
    SPACE           shift and go to state 30
    DUP             shift and go to state 31
    COMMENT_LINE    shift and go to state 32
    COMMENT_BLOCK   shift and go to state 33
    DROP            shift and go to state 34
    SWAP            shift and go to state 35
    ROT             shift and go to state 36
    OVER            shift and go to state 37
    CONCAT          shift and go to state 38
    CR              shift and go to state 39
    EMIT            shift and go to state 40
    CHAR            shift and go to state 41
    KEY             shift and go to state 42
    SPACES          shift and go to state 43
    2DUP            shift and go to state 44
    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46
    COLON           shift and go to state 47

    comandos                       shift and go to state 61
    function                       shift and go to state 24
    comando                        shift and go to state 3
    exp_aritmeticas                shift and go to state 4
    exp_relacionais                shift and go to state 5
    functions                      shift and go to state 6
    values                         shift and go to state 7
    stdout                         shift and go to state 8
    dot                            shift and go to state 9
    space                          shift and go to state 10
    dup                            shift and go to state 11
    comment                        shift and go to state 12
    drop                           shift and go to state 13
    swap                           shift and go to state 14
    rot                            shift and go to state 15
    over                           shift and go to state 16
    concat                         shift and go to state 17
    cr                             shift and go to state 18
    emit                           shift and go to state 19
    char                           shift and go to state 20
    key                            shift and go to state 21
    spaces                         shift and go to state 22
    2dup                           shift and go to state 23
    func_criadas                   shift and go to state 25

state 51

    (8) exp_aritmeticas -> comando comando PLUS .

    NUMBER          reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    STRING          reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    STDOUT          reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    DOT             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    SPACE           reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    DUP             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    COMMENT_LINE    reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    COMMENT_BLOCK   reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    DROP            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    SWAP            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    ROT             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    OVER            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    CONCAT          reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    CR              reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    EMIT            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    CHAR            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    KEY             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    SPACES          reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    2DUP            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    FUNCTION        reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    FUNCTION_CALL   reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    COLON           reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    $end            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    PLUS            reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    MINUS           reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    TIMES           reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    DIVIDE          reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    MOD             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    NOT             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    INF             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    SUP             reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    INFEQ           reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    SUPEQ           reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)
    SEMICOLON       reduce using rule 8 (exp_aritmeticas -> comando comando PLUS .)


state 52

    (9) exp_aritmeticas -> comando comando MINUS .

    NUMBER          reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    STRING          reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    STDOUT          reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    DOT             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    SPACE           reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    DUP             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    COMMENT_LINE    reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    COMMENT_BLOCK   reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    DROP            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    SWAP            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    ROT             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    OVER            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    CONCAT          reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    CR              reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    EMIT            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    CHAR            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    KEY             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    SPACES          reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    2DUP            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    FUNCTION        reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    FUNCTION_CALL   reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    COLON           reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    $end            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    PLUS            reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    MINUS           reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    TIMES           reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    DIVIDE          reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    MOD             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    NOT             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    INF             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    SUP             reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    INFEQ           reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    SUPEQ           reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)
    SEMICOLON       reduce using rule 9 (exp_aritmeticas -> comando comando MINUS .)


state 53

    (10) exp_aritmeticas -> comando comando TIMES .

    NUMBER          reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    STRING          reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    STDOUT          reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    DOT             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    SPACE           reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    DUP             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    COMMENT_LINE    reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    COMMENT_BLOCK   reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    DROP            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    SWAP            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    ROT             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    OVER            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    CONCAT          reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    CR              reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    EMIT            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    CHAR            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    KEY             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    SPACES          reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    2DUP            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    FUNCTION        reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    FUNCTION_CALL   reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    COLON           reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    $end            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    PLUS            reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    MINUS           reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    TIMES           reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    DIVIDE          reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    MOD             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    NOT             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    INF             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    SUP             reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    INFEQ           reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    SUPEQ           reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)
    SEMICOLON       reduce using rule 10 (exp_aritmeticas -> comando comando TIMES .)


state 54

    (11) exp_aritmeticas -> comando comando DIVIDE .

    NUMBER          reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    STRING          reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    STDOUT          reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    DOT             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    SPACE           reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    DUP             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    COMMENT_LINE    reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    COMMENT_BLOCK   reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    DROP            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    SWAP            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    ROT             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    OVER            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    CONCAT          reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    CR              reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    EMIT            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    CHAR            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    KEY             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    SPACES          reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    2DUP            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    FUNCTION        reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    FUNCTION_CALL   reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    COLON           reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    $end            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    PLUS            reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    MINUS           reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    TIMES           reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    DIVIDE          reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    MOD             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    NOT             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    INF             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    SUP             reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    INFEQ           reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    SUPEQ           reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)
    SEMICOLON       reduce using rule 11 (exp_aritmeticas -> comando comando DIVIDE .)


state 55

    (12) exp_aritmeticas -> comando comando MOD .

    NUMBER          reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    STRING          reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    STDOUT          reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    DOT             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    SPACE           reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    DUP             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    COMMENT_LINE    reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    COMMENT_BLOCK   reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    DROP            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    SWAP            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    ROT             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    OVER            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    CONCAT          reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    CR              reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    EMIT            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    CHAR            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    KEY             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    SPACES          reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    2DUP            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    FUNCTION        reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    FUNCTION_CALL   reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    COLON           reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    $end            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    PLUS            reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    MINUS           reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    TIMES           reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    DIVIDE          reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    MOD             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    NOT             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    INF             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    SUP             reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    INFEQ           reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    SUPEQ           reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)
    SEMICOLON       reduce using rule 12 (exp_aritmeticas -> comando comando MOD .)


state 56

    (13) exp_relacionais -> comando comando NOT .

    NUMBER          reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    STRING          reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    STDOUT          reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    DOT             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    SPACE           reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    DUP             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    COMMENT_LINE    reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    COMMENT_BLOCK   reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    DROP            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    SWAP            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    ROT             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    OVER            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    CONCAT          reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    CR              reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    EMIT            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    CHAR            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    KEY             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    SPACES          reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    2DUP            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    FUNCTION        reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    FUNCTION_CALL   reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    COLON           reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    $end            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    PLUS            reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    MINUS           reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    TIMES           reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    DIVIDE          reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    MOD             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    NOT             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    INF             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    SUP             reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    INFEQ           reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    SUPEQ           reduce using rule 13 (exp_relacionais -> comando comando NOT .)
    SEMICOLON       reduce using rule 13 (exp_relacionais -> comando comando NOT .)


state 57

    (14) exp_relacionais -> comando comando INF .

    NUMBER          reduce using rule 14 (exp_relacionais -> comando comando INF .)
    STRING          reduce using rule 14 (exp_relacionais -> comando comando INF .)
    STDOUT          reduce using rule 14 (exp_relacionais -> comando comando INF .)
    DOT             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    SPACE           reduce using rule 14 (exp_relacionais -> comando comando INF .)
    DUP             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    COMMENT_LINE    reduce using rule 14 (exp_relacionais -> comando comando INF .)
    COMMENT_BLOCK   reduce using rule 14 (exp_relacionais -> comando comando INF .)
    DROP            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    SWAP            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    ROT             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    OVER            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    CONCAT          reduce using rule 14 (exp_relacionais -> comando comando INF .)
    CR              reduce using rule 14 (exp_relacionais -> comando comando INF .)
    EMIT            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    CHAR            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    KEY             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    SPACES          reduce using rule 14 (exp_relacionais -> comando comando INF .)
    2DUP            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    FUNCTION        reduce using rule 14 (exp_relacionais -> comando comando INF .)
    FUNCTION_CALL   reduce using rule 14 (exp_relacionais -> comando comando INF .)
    COLON           reduce using rule 14 (exp_relacionais -> comando comando INF .)
    $end            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    PLUS            reduce using rule 14 (exp_relacionais -> comando comando INF .)
    MINUS           reduce using rule 14 (exp_relacionais -> comando comando INF .)
    TIMES           reduce using rule 14 (exp_relacionais -> comando comando INF .)
    DIVIDE          reduce using rule 14 (exp_relacionais -> comando comando INF .)
    MOD             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    NOT             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    INF             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    SUP             reduce using rule 14 (exp_relacionais -> comando comando INF .)
    INFEQ           reduce using rule 14 (exp_relacionais -> comando comando INF .)
    SUPEQ           reduce using rule 14 (exp_relacionais -> comando comando INF .)
    SEMICOLON       reduce using rule 14 (exp_relacionais -> comando comando INF .)


state 58

    (15) exp_relacionais -> comando comando SUP .

    NUMBER          reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    STRING          reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    STDOUT          reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    DOT             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    SPACE           reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    DUP             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    COMMENT_LINE    reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    COMMENT_BLOCK   reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    DROP            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    SWAP            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    ROT             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    OVER            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    CONCAT          reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    CR              reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    EMIT            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    CHAR            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    KEY             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    SPACES          reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    2DUP            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    FUNCTION        reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    FUNCTION_CALL   reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    COLON           reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    $end            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    PLUS            reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    MINUS           reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    TIMES           reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    DIVIDE          reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    MOD             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    NOT             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    INF             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    SUP             reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    INFEQ           reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    SUPEQ           reduce using rule 15 (exp_relacionais -> comando comando SUP .)
    SEMICOLON       reduce using rule 15 (exp_relacionais -> comando comando SUP .)


state 59

    (16) exp_relacionais -> comando comando INFEQ .

    NUMBER          reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    STRING          reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    STDOUT          reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    DOT             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    SPACE           reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    DUP             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    COMMENT_LINE    reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    COMMENT_BLOCK   reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    DROP            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    SWAP            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    ROT             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    OVER            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    CONCAT          reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    CR              reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    EMIT            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    CHAR            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    KEY             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    SPACES          reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    2DUP            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    FUNCTION        reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    FUNCTION_CALL   reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    COLON           reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    $end            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    PLUS            reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    MINUS           reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    TIMES           reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    DIVIDE          reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    MOD             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    NOT             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    INF             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    SUP             reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    INFEQ           reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    SUPEQ           reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)
    SEMICOLON       reduce using rule 16 (exp_relacionais -> comando comando INFEQ .)


state 60

    (17) exp_relacionais -> comando comando SUPEQ .

    NUMBER          reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    STRING          reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    STDOUT          reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    DOT             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    SPACE           reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    DUP             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    COMMENT_LINE    reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    COMMENT_BLOCK   reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    DROP            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    SWAP            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    ROT             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    OVER            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    CONCAT          reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    CR              reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    EMIT            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    CHAR            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    KEY             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    SPACES          reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    2DUP            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    FUNCTION        reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    FUNCTION_CALL   reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    COLON           reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    $end            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    PLUS            reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    MINUS           reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    TIMES           reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    DIVIDE          reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    MOD             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    NOT             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    INF             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    SUP             reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    INFEQ           reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    SUPEQ           reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)
    SEMICOLON       reduce using rule 17 (exp_relacionais -> comando comando SUPEQ .)


state 61

    (57) func_criadas -> COLON FUNCTION comandos . SEMICOLON function
    (3) comandos -> comandos . comando
    (4) comando -> . exp_aritmeticas
    (5) comando -> . exp_relacionais
    (6) comando -> . functions
    (7) comando -> . values
    (8) exp_aritmeticas -> . comando comando PLUS
    (9) exp_aritmeticas -> . comando comando MINUS
    (10) exp_aritmeticas -> . comando comando TIMES
    (11) exp_aritmeticas -> . comando comando DIVIDE
    (12) exp_aritmeticas -> . comando comando MOD
    (13) exp_relacionais -> . comando comando NOT
    (14) exp_relacionais -> . comando comando INF
    (15) exp_relacionais -> . comando comando SUP
    (16) exp_relacionais -> . comando comando INFEQ
    (17) exp_relacionais -> . comando comando SUPEQ
    (20) functions -> . stdout
    (21) functions -> . dot
    (22) functions -> . space
    (23) functions -> . dup
    (24) functions -> . comment
    (25) functions -> . drop
    (26) functions -> . swap
    (27) functions -> . rot
    (28) functions -> . over
    (29) functions -> . concat
    (30) functions -> . cr
    (31) functions -> . emit
    (32) functions -> . char
    (33) functions -> . key
    (34) functions -> . spaces
    (35) functions -> . 2dup
    (36) functions -> . function
    (37) functions -> . func_criadas
    (18) values -> . NUMBER
    (19) values -> . STRING
    (38) stdout -> . STDOUT
    (39) dot -> . DOT
    (40) space -> . SPACE
    (41) dup -> . DUP
    (42) comment -> . COMMENT_LINE
    (43) comment -> . COMMENT_BLOCK
    (44) drop -> . DROP
    (45) swap -> . SWAP
    (46) rot -> . ROT
    (47) over -> . OVER
    (48) concat -> . CONCAT
    (49) cr -> . CR
    (50) emit -> . EMIT
    (51) char -> . CHAR
    (52) key -> . KEY
    (53) spaces -> . SPACES
    (54) 2dup -> . 2DUP
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL
    (57) func_criadas -> . COLON FUNCTION comandos SEMICOLON function

    SEMICOLON       shift and go to state 62
    NUMBER          shift and go to state 26
    STRING          shift and go to state 27
    STDOUT          shift and go to state 28
    DOT             shift and go to state 29
    SPACE           shift and go to state 30
    DUP             shift and go to state 31
    COMMENT_LINE    shift and go to state 32
    COMMENT_BLOCK   shift and go to state 33
    DROP            shift and go to state 34
    SWAP            shift and go to state 35
    ROT             shift and go to state 36
    OVER            shift and go to state 37
    CONCAT          shift and go to state 38
    CR              shift and go to state 39
    EMIT            shift and go to state 40
    CHAR            shift and go to state 41
    KEY             shift and go to state 42
    SPACES          shift and go to state 43
    2DUP            shift and go to state 44
    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46
    COLON           shift and go to state 47

    function                       shift and go to state 24
    comando                        shift and go to state 48
    exp_aritmeticas                shift and go to state 4
    exp_relacionais                shift and go to state 5
    functions                      shift and go to state 6
    values                         shift and go to state 7
    stdout                         shift and go to state 8
    dot                            shift and go to state 9
    space                          shift and go to state 10
    dup                            shift and go to state 11
    comment                        shift and go to state 12
    drop                           shift and go to state 13
    swap                           shift and go to state 14
    rot                            shift and go to state 15
    over                           shift and go to state 16
    concat                         shift and go to state 17
    cr                             shift and go to state 18
    emit                           shift and go to state 19
    char                           shift and go to state 20
    key                            shift and go to state 21
    spaces                         shift and go to state 22
    2dup                           shift and go to state 23
    func_criadas                   shift and go to state 25

state 62

    (57) func_criadas -> COLON FUNCTION comandos SEMICOLON . function
    (55) function -> . FUNCTION
    (56) function -> . FUNCTION_CALL

    FUNCTION        shift and go to state 45
    FUNCTION_CALL   shift and go to state 46

    function                       shift and go to state 63

state 63

    (57) func_criadas -> COLON FUNCTION comandos SEMICOLON function .

    NUMBER          reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    STRING          reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    STDOUT          reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    DOT             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    SPACE           reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    DUP             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    COMMENT_LINE    reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    COMMENT_BLOCK   reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    DROP            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    SWAP            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    ROT             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    OVER            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    CONCAT          reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    CR              reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    EMIT            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    CHAR            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    KEY             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    SPACES          reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    2DUP            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    FUNCTION        reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    FUNCTION_CALL   reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    COLON           reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    $end            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    PLUS            reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    MINUS           reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    TIMES           reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    DIVIDE          reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    MOD             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    NOT             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    INF             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    SUP             reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    INFEQ           reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    SUPEQ           reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)
    SEMICOLON       reduce using rule 57 (func_criadas -> COLON FUNCTION comandos SEMICOLON function .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NUMBER in state 3 resolved as shift
WARNING: shift/reduce conflict for STRING in state 3 resolved as shift
WARNING: shift/reduce conflict for STDOUT in state 3 resolved as shift
WARNING: shift/reduce conflict for DOT in state 3 resolved as shift
WARNING: shift/reduce conflict for SPACE in state 3 resolved as shift
WARNING: shift/reduce conflict for DUP in state 3 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 3 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 3 resolved as shift
WARNING: shift/reduce conflict for DROP in state 3 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 3 resolved as shift
WARNING: shift/reduce conflict for ROT in state 3 resolved as shift
WARNING: shift/reduce conflict for OVER in state 3 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 3 resolved as shift
WARNING: shift/reduce conflict for CR in state 3 resolved as shift
WARNING: shift/reduce conflict for EMIT in state 3 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 3 resolved as shift
WARNING: shift/reduce conflict for KEY in state 3 resolved as shift
WARNING: shift/reduce conflict for SPACES in state 3 resolved as shift
WARNING: shift/reduce conflict for 2DUP in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 3 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CALL in state 3 resolved as shift
WARNING: shift/reduce conflict for COLON in state 3 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 48 resolved as shift
WARNING: shift/reduce conflict for STRING in state 48 resolved as shift
WARNING: shift/reduce conflict for STDOUT in state 48 resolved as shift
WARNING: shift/reduce conflict for DOT in state 48 resolved as shift
WARNING: shift/reduce conflict for SPACE in state 48 resolved as shift
WARNING: shift/reduce conflict for DUP in state 48 resolved as shift
WARNING: shift/reduce conflict for COMMENT_LINE in state 48 resolved as shift
WARNING: shift/reduce conflict for COMMENT_BLOCK in state 48 resolved as shift
WARNING: shift/reduce conflict for DROP in state 48 resolved as shift
WARNING: shift/reduce conflict for SWAP in state 48 resolved as shift
WARNING: shift/reduce conflict for ROT in state 48 resolved as shift
WARNING: shift/reduce conflict for OVER in state 48 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 48 resolved as shift
WARNING: shift/reduce conflict for CR in state 48 resolved as shift
WARNING: shift/reduce conflict for EMIT in state 48 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 48 resolved as shift
WARNING: shift/reduce conflict for KEY in state 48 resolved as shift
WARNING: shift/reduce conflict for SPACES in state 48 resolved as shift
WARNING: shift/reduce conflict for 2DUP in state 48 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 48 resolved as shift
WARNING: shift/reduce conflict for FUNCTION_CALL in state 48 resolved as shift
WARNING: shift/reduce conflict for COLON in state 48 resolved as shift
